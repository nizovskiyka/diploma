(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    390278,       7439]
NotebookOptionsPosition[    389501,       7419]
NotebookOutlinePosition[    389877,       7435]
CellTagsIndexPosition[    389834,       7432]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"g", "=", "9.81"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["m", "BA"], "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["m", "CB"], "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["m", "OC"], "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["J1", "BA"], "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "\:041e\:0442\:043d\:043e\:0441\:0438\:0442\:0435\:043b\:044c\:043d\:043e\
", " ", "\:0442\:043e\:0447\:043a\:0438", " ", "B"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["J1", "CB"], "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "\:041e\:0442\:043d\:043e\:0441\:0438\:0442\:0435\:043b\:044c\:043d\:043e\
", " ", "\:0442\:043e\:0447\:043a\:0438", " ", "C"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["J1", "OC"], "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "\:041e\:0442\:043d\:043e\:0441\:0438\:0442\:0435\:043b\:044c\:043d\:043e\
", " ", "\:0442\:043e\:0447\:043a\:0438", " ", "O"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["J", "BA"], "=", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["J1", "BA"], "+", 
       RowBox[{
        SubscriptBox["m", "BA"], "*", 
        RowBox[{
         SubscriptBox["k", "BA"], "^", "2"}]}]}], ")"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "\:041e\:0442\:043d\:043e\:0441\:0438\:0442\:0435\:043b\:044c\:043d\:043e\
", " ", "\:0446\:0435\:043d\:0442\:0440\:0430", " ", 
     "\:043c\:0430\:0441\:0441", " ", "BA"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["J", "CB"], "=", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["J1", "CB"], "+", 
       RowBox[{
        SubscriptBox["m", "CB"], "*", 
        RowBox[{
         SubscriptBox["k", "CB"], "^", "2"}]}]}], ")"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "\:041e\:0442\:043d\:043e\:0441\:0438\:0442\:0435\:043b\:044c\:043d\:043e\
", " ", "\:0446\:0435\:043d\:0442\:0440\:0430", " ", 
     "\:043c\:0430\:0441\:0441", " ", "CB"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["J", "OC"], "=", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["J1", "OC"], "+", 
       RowBox[{
        SubscriptBox["m", "OC"], "*", 
        RowBox[{
         SubscriptBox["k", "OC"], "^", "2"}]}]}], ")"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "\:041e\:0442\:043d\:043e\:0441\:0438\:0442\:0435\:043b\:044c\:043d\:043e\
", " ", "\:0446\:0435\:043d\:0442\:0440\:0430", " ", 
     "\:043c\:0430\:0441\:0441", " ", "OC"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["l", "BA"], "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["l", "CB"], "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["l", "OC"], "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["k", "BA"], "=", "0.1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "\:0420\:0430\:0441\:0441\:0442\:043e\:044f\:043d\:0438\:0435", " ", 
     "\:043e\:0442", " ", "B", " ", "\:043e", " ", 
     "\:0446\:0435\:043d\:0442\:0440\:0430", " ", "\:043c\:0430\:0441\:0441", 
     " ", "\:0437\:0432\:0435\:043d\:0430", " ", "BA"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["k", "CB"], "=", "0.5"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "\:0420\:0430\:0441\:0441\:0442\:043e\:044f\:043d\:0438\:0435", " ", 
     "\:043e\:0442", " ", "\:0421", " ", "\:043e", " ", 
     "\:0446\:0435\:043d\:0442\:0440\:0430", " ", "\:043c\:0430\:0441\:0441", 
     " ", "\:0437\:0432\:0435\:043d\:0430", " ", "CB"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["k", "OC"], "=", "0.5"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "\:0420\:0430\:0441\:0441\:0442\:043e\:044f\:043d\:0438\:0435", " ", 
     "\:043e\:0442", " ", "O", " ", "\:043e", " ", 
     "\:0446\:0435\:043d\:0442\:0440\:0430", " ", "\:043c\:0430\:0441\:0441", 
     " ", "\:0437\:0432\:0435\:043d\:0430", " ", "OC"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"q", "=", 
     RowBox[{"15", " ", "-", " ", 
      RowBox[{"10", "*", 
       RowBox[{"\[Alpha]1", "[", "t", "]"}]}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "\:0420\:0430\:0432\:043d\:043e\:0434\:0435\:0439\:0441\:0442\:0432\
\:0443\:044e\:0449\:0438\:0439", " ", "\:043c\:043e\:043c\:0435\:043d\:0442", 
       " ", "\:0441\:0438\:043b", " ", "\:043c\:0435\:0436\:0434\:0443", " ", 
       "\:043f\:043e\:0434\:0432\:0435\:0441\:043e\:043c", " ", "\:0438", " ",
        "\:0431\:0435\:0434\:0440\:043e\:043c"}], ",", " ", 
      RowBox[{"\"\<- 6*\[Alpha]1[t]\>\"", " ", "-", " ", 
       RowBox[{
       "\:043c\:043e\:043c\:0435\:043d\:0442", " ", 
        "\:0432\:044f\:0437\:043a\:043e\:0433\:043e", " ", 
        "\:0442\:0440\:0435\:043d\:0438\:044f"}]}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"u", "=", 
     RowBox[{"3", "    ", "-", " ", 
      RowBox[{"10", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]1", "[", "t", "]"}], " ", "-", " ", 
         RowBox[{"\[Alpha]1", "[", "t", "]"}]}], ")"}]}]}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "\:0420\:0430\:0432\:043d\:043e\:0434\:0435\:0439\:0441\:0442\:0432\
\:0443\:044e\:0449\:0438\:0439", " ", "\:043c\:043e\:043c\:0435\:043d\:0442", 
       " ", "\:0441\:0438\:043b", " ", "\:043c\:0435\:0436\:0434\:0443", " ", 
       "\:0431\:0435\:0434\:0440\:043e\:043c", " ", "\:0438", " ", 
       "\:0433\:043e\:043b\:0435\:043d\:044c\:044e", " ", 
       "\"\<- 6*\[Beta]1[t]\>\""}], " ", "-", " ", 
      RowBox[{
      "\:043c\:043e\:043c\:0435\:043d\:0442", " ", 
       "\:0432\:044f\:0437\:043a\:043e\:0433\:043e", " ", 
       "\:0442\:0440\:0435\:043d\:0438\:044f"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"s", "=", 
     RowBox[{"0", "  ", "-", " ", 
      RowBox[{"10", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Gamma]1", "[", "t", "]"}], " ", "-", " ", 
         RowBox[{"\[Beta]1", "[", "t", "]"}]}], ")"}]}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "\:0420\:0430\:0432\:043d\:043e\:0434\:0435\:0439\:0441\:0442\:0432\
\:0443\:044e\:0449\:0438\:0439", " ", "\:043c\:043e\:043c\:0435\:043d\:0442", 
       " ", "\:0441\:0438\:043b", " ", "\:043c\:0435\:0436\:0434\:0443", " ", 
       "\:0433\:043e\:043b\:0435\:043d\:044c\:044e", " ", "\:0438", " ", 
       "\:0441\:0442\:043e\:043f\:043e\:0439", " ", 
       "\"\<- 6*\[Gamma]1[t]\>\""}], " ", "-", " ", 
      RowBox[{
      "\:043c\:043e\:043c\:0435\:043d\:0442", " ", 
       "\:0432\:044f\:0437\:043a\:043e\:0433\:043e", " ", 
       "\:0442\:0440\:0435\:043d\:0438\:044f"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"eqns", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Alpha]1", "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"\[Alpha]", "'"}], "[", "t", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Beta]1", "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"\[Beta]", "'"}], "[", "t", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Gamma]1", "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"\[Gamma]", "'"}], "[", "t", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "BA"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                 RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
               SubsuperscriptBox["l", "CB", "3"], " ", 
               SubscriptBox["l", "OC"], " ", 
               SubscriptBox["m", "BA"]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                 RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
               SubscriptBox["k", "CB"], " ", 
               SubscriptBox["l", "OC"], " ", 
               SubscriptBox["m", "CB"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "s"}], "+", "u", "+", 
                 RowBox[{
                  SubscriptBox["k", "CB"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "g"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["l", "OC"]}]}], ")"}], " ", 
                  SubscriptBox["m", "CB"]}]}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                 RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
               SubscriptBox["l", "CB"], " ", 
               SubscriptBox["l", "OC"], " ", 
               RowBox[{"(", 
                RowBox[{"s", "-", "u", "+", 
                 RowBox[{
                  SubscriptBox["k", "CB"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "BA"]}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["l", "OC"]}], "+", 
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SubscriptBox["m", "BA"]}], ")"}]}]}], ")"}], " ", 
                  SubscriptBox["m", "CB"]}]}], ")"}]}], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["J", "CB"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "q"}], "+", "u", "+", 
                 RowBox[{
                  SubscriptBox["l", "OC"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "BA"]}], "+", 
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["m", "BA"], "+", 
                    SubscriptBox["m", "CB"]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["l", "CB"], "+", 
                    RowBox[{
                    SubscriptBox["k", "CB"], " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}]}], ")"}]}], "+", 
                 RowBox[{"g", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}], " ", 
                  SubscriptBox["k", "OC"], " ", 
                  SubscriptBox["m", "OC"]}]}], ")"}]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "CB", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], ")"}]}], "]"}], " ", 
                  SubsuperscriptBox["l", "OC", "2"]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox[
                   RowBox[{"\[Gamma]1", "[", "t", "]"}], "2"], " ", 
                  SubscriptBox["k", "BA"], " ", 
                  SubscriptBox["l", "OC"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}]}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}], "+", 
                 RowBox[{"2", " ", 
                  SubscriptBox["l", "OC"], " ", 
                  SubscriptBox["m", "BA"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "g"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"]}]}], ")"}], " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}], "+", 
                 RowBox[{"2", " ", 
                  SubscriptBox["m", "BA"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "q"}], "+", "u", "+", 
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["k", "OC"], " ", 
                    SubscriptBox["m", "OC"]}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}], "-", 
           RowBox[{
            SubscriptBox["k", "BA"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"\[Gamma]1", "[", "t", "]"}], "2"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                 RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                 RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
               SubsuperscriptBox["k", "BA", "2"], " ", 
               SubsuperscriptBox["l", "CB", "2"], " ", 
               SubscriptBox["l", "OC"]}], "+", 
              RowBox[{"s", " ", 
               SubscriptBox["l", "OC"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                  SubscriptBox["J", "CB"]}], "+", 
                 RowBox[{
                  SubscriptBox["l", "CB"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["l", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "+", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"], " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}]}], ")"}]}], "+", 
              RowBox[{
               SubscriptBox["k", "BA"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  SuperscriptBox[
                   RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                  SubsuperscriptBox["l", "CB", "3"], " ", 
                  SubscriptBox["l", "OC"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                  SubscriptBox["J", "CB"], " ", 
                  SubscriptBox["l", "OC"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"]}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["l", "OC"]}], "+", 
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}], "+", 
                 RowBox[{
                  SubscriptBox["l", "CB"], " ", 
                  SubscriptBox["l", "OC"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"s", "-", "u"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["J", "CB"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["k", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], ")"}]}], "]"}], "+", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], ")"}]}], "]"}]}], 
                    ")"}], " ", 
                    SubscriptBox["l", "OC"]}], "-", 
                    RowBox[{"2", " ", "g", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}]}], ")"}], " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "CB", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    SubsuperscriptBox["l", "OC", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], ")"}]}], "]"}], "+", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], ")"}]}], "]"}], 
                    "-", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], ")"}]}], "]"}], 
                    " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["l", "OC"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", " ", 
                    SubscriptBox["m", "BA"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}]}], "]"}], "+", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}]}], "]"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"]}]}], ")"}], " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "q"}], "+", "u", "+", 
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["k", "OC"], " ", 
                    SubscriptBox["m", "OC"]}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SubscriptBox["J", "BA"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                  RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "CB", "2"], " ", 
               SubsuperscriptBox["l", "OC", "2"]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["J", "CB"], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "CB", "2"], " ", 
                  SubscriptBox["m", "BA"]}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["J", "OC"], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "OC", "2"], " ", 
                  SubscriptBox["m", "BA"]}]}], ")"}]}], "-", 
              RowBox[{
               SubsuperscriptBox["l", "OC", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["J", "CB"], "+", 
                 RowBox[{
                  SubscriptBox["l", "CB"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], "2"], " ", 
                    SubscriptBox["k", "CB"]}], "+", 
                    RowBox[{
                    SubscriptBox["l", "CB"], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}]}], ")"}], " ", 
               SubscriptBox["m", "CB"]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                  RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["k", "CB", "2"], " ", 
               SubsuperscriptBox["l", "OC", "2"], " ", 
               SubsuperscriptBox["m", "CB", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SubsuperscriptBox["k", "BA", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                  RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubscriptBox["J", "OC"], " ", 
               SubsuperscriptBox["l", "CB", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "OC", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], "2"], " ", 
                  SubscriptBox["J", "CB"]}], "+", 
                 RowBox[{
                  SubscriptBox["l", "CB"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["l", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], ")"}]}], "]"}], 
                    "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], ")"}]}], "]"}]}], 
                    ")"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["l", "CB"]}]}], ")"}], " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}], "\[Equal]", 
        RowBox[{
         RowBox[{"\[Alpha]1", "'"}], "[", "t", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "BA"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SubscriptBox["J", "OC"], " ", 
               RowBox[{"(", 
                RowBox[{"s", "-", "u", "+", 
                 RowBox[{
                  SubscriptBox["l", "CB"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "BA"]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["l", "OC"]}], "+", 
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}], "+", 
                 RowBox[{
                  SubscriptBox["k", "CB"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}], "-", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["l", "OC"]}]}], ")"}], " ", 
                  SubscriptBox["m", "CB"]}]}], ")"}]}], "-", 
              RowBox[{
               SubscriptBox["l", "OC"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], ")"}]}], "]"}], " ", 
                  SubsuperscriptBox["l", "CB", "2"], " ", 
                  SubscriptBox["l", "OC"]}], "+", 
                 RowBox[{"2", " ", 
                  SubscriptBox["l", "CB"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    SubsuperscriptBox["l", "OC", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["m", "BA"], "+", 
                    SubscriptBox["m", "CB"]}], ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["l", "OC"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", " ", 
                    SubscriptBox["m", "BA"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], ")"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"]}], "-", 
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}], " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]1", "[", "t", "]"}], "2"], " ", 
                    SubscriptBox["k", "BA"], " ", 
                    SubscriptBox["l", "OC"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["m", "BA"], "+", 
                    SubscriptBox["m", "CB"]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "q"}], "+", "u", "+", 
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["k", "OC"], " ", 
                    SubscriptBox["m", "OC"]}]}], ")"}]}]}], ")"}]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"], " ", 
                    SubsuperscriptBox["l", "OC", "2"], " ", 
                    SubscriptBox["m", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["m", "BA"], "+", 
                    SubscriptBox["m", "CB"]}], ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["l", "OC"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["m", "BA"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "s"}], "+", "u", "+", 
                    RowBox[{"g", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"], " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["m", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "s"}], "+", "u", "+", 
                    RowBox[{
                    SubscriptBox["k", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Gamma]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "BA"]}], "+", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"]}]}], ")"}], " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"], " ", 
                    SubscriptBox["m", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "q"}], "+", "u", "+", 
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["k", "OC"], " ", 
                    SubscriptBox["m", "OC"]}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["k", "BA"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                 RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
               SubscriptBox["J", "OC"], " ", 
               SubscriptBox["l", "CB"], " ", 
               RowBox[{"(", 
                RowBox[{"s", "+", 
                 RowBox[{
                  SubscriptBox["k", "BA"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["l", "CB"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["l", "OC"]}], "-", 
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}]}], ")"}]}], "+", 
              RowBox[{
               SubscriptBox["l", "OC"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  SuperscriptBox[
                   RowBox[{"\[Gamma]1", "[", "t", "]"}], "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                  SubsuperscriptBox["k", "BA", "2"], " ", 
                  SubscriptBox["l", "CB"], " ", 
                  SubscriptBox["l", "OC"]}], "+", 
                 RowBox[{"2", " ", "s", " ", 
                  SubscriptBox["l", "OC"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}]}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"], " ", 
                    SubscriptBox["m", "CB"]}], "+", 
                    RowBox[{
                    SubscriptBox["l", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}]}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["m", "BA"], "+", 
                    SubscriptBox["m", "CB"]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubscriptBox["k", "BA"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["l", "OC"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "s"}], "+", "u"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "-", 
                    RowBox[{
                    SubscriptBox["k", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["l", "OC"]}], "-", 
                    RowBox[{"g", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}], " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                    SubsuperscriptBox["l", "CB", "2"], " ", 
                    SubscriptBox["l", "OC"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "+", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], ")"}]}], "]"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["m", "BA"], "+", 
                    SubscriptBox["m", "CB"]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    SubscriptBox["l", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["l", "OC"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", " ", 
                    SubscriptBox["m", "BA"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "+", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "+", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"]}], "+", 
                    RowBox[{"g", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}]}], ")"}], " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    SubsuperscriptBox["l", "OC", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["m", "BA"], "+", 
                    SubscriptBox["m", "CB"]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "q"}], "+", "u", "+", 
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["k", "OC"], " ", 
                    SubscriptBox["m", "OC"]}]}], ")"}]}]}], ")"}]}]}], 
                   ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SubscriptBox["J", "BA"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                  RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "CB", "2"], " ", 
               SubsuperscriptBox["l", "OC", "2"]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["J", "CB"], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "CB", "2"], " ", 
                  SubscriptBox["m", "BA"]}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["J", "OC"], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "OC", "2"], " ", 
                  SubscriptBox["m", "BA"]}]}], ")"}]}], "-", 
              RowBox[{
               SubsuperscriptBox["l", "OC", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["J", "CB"], "+", 
                 RowBox[{
                  SubscriptBox["l", "CB"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], "2"], " ", 
                    SubscriptBox["k", "CB"]}], "+", 
                    RowBox[{
                    SubscriptBox["l", "CB"], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}]}], ")"}], " ", 
               SubscriptBox["m", "CB"]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                  RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["k", "CB", "2"], " ", 
               SubsuperscriptBox["l", "OC", "2"], " ", 
               SubsuperscriptBox["m", "CB", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SubsuperscriptBox["k", "BA", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                  RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubscriptBox["J", "OC"], " ", 
               SubsuperscriptBox["l", "CB", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "OC", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], "2"], " ", 
                  SubscriptBox["J", "CB"]}], "+", 
                 RowBox[{
                  SubscriptBox["l", "CB"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["l", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], ")"}]}], "]"}], 
                    "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], ")"}]}], "]"}]}], 
                    ")"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["l", "CB"]}]}], ")"}], " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}], "\[Equal]", 
        RowBox[{
         RowBox[{"\[Beta]1", "'"}], "[", "t", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["J", "OC"], " ", 
            SubscriptBox["l", "CB"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"\[Gamma]1", "[", "t", "]"}], "2"]}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                   RowBox[{"\[Gamma]", "[", "t", "]"}]}], ")"}]}], "]"}], " ", 
               SubsuperscriptBox["k", "BA", "2"], " ", 
               SubscriptBox["l", "CB"]}], "-", 
              RowBox[{"2", " ", "s", " ", 
               SubscriptBox["l", "CB"], " ", 
               SubscriptBox["m", "BA"]}], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["k", "BA"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox[
                    RowBox[{"\[Beta]1", "[", "t", "]"}], "2"]}], " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                  SubsuperscriptBox["l", "CB", "2"], " ", 
                  SubscriptBox["m", "BA"]}], "+", 
                 RowBox[{
                  SubscriptBox["l", "CB"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    SubscriptBox["l", "OC"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}], "+", 
                    RowBox[{"g", " ", 
                    SubscriptBox["m", "BA"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}]}], ")"}]}], "+", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "s"}], "+", "u", "+", 
                    RowBox[{
                    SubscriptBox["k", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "g"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["l", "OC"]}]}], ")"}], " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}], "-", 
           RowBox[{
            SubscriptBox["J", "CB"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SubscriptBox["J", "OC"], " ", 
               RowBox[{"(", 
                RowBox[{"s", "+", 
                 RowBox[{
                  SubscriptBox["k", "BA"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["l", "CB"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["l", "OC"]}], "-", 
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}]}], ")"}]}], "+", 
              RowBox[{
               SubscriptBox["l", "OC"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[Gamma]1", "[", "t", "]"}], "2"], " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], ")"}]}], "]"}], 
                  " ", 
                  SubsuperscriptBox["k", "BA", "2"], " ", 
                  SubscriptBox["l", "OC"]}], "+", 
                 RowBox[{"2", " ", "s", " ", 
                  SubscriptBox["l", "OC"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SubscriptBox["m", "BA"], "+", 
                    SubscriptBox["m", "CB"]}], ")"}]}], "+", 
                 RowBox[{"2", " ", 
                  SubscriptBox["k", "BA"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubsuperscriptBox["l", "OC", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["m", "BA"], "+", 
                    SubscriptBox["m", "CB"]}], ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["l", "OC"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", " ", 
                    SubscriptBox["m", "BA"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"]}]}], ")"}]}], "-", 
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}], " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                    SubscriptBox["l", "CB"], " ", 
                    SubscriptBox["l", "OC"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["m", "BA"], "+", 
                    SubscriptBox["m", "CB"]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "q"}], "+", "u", "+", 
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["k", "OC"], " ", 
                    SubscriptBox["m", "OC"]}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["l", "OC"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"\[Gamma]1", "[", "t", "]"}], "2"], " ", 
               SubsuperscriptBox["k", "BA", "2"], " ", 
               SubscriptBox["l", "CB"], " ", 
               SubscriptBox["l", "OC"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "+", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}]}], "]"}], " ", 
                  SubscriptBox["k", "CB"], " ", 
                  SubscriptBox["m", "CB"]}], "+", 
                 RowBox[{
                  SubscriptBox["l", "CB"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "+", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["m", "BA"]}], ")"}]}], "-", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], ")"}]}], "]"}], 
                    " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}]}], ")"}]}], "+", 
              RowBox[{"2", " ", "s", " ", 
               SubscriptBox["l", "OC"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], "2"], " ", 
                  SubscriptBox["k", "CB"], " ", 
                  SubscriptBox["l", "CB"], " ", 
                  SubscriptBox["m", "CB"]}], "+", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], "2"], " ", 
                  SubsuperscriptBox["k", "CB", "2"], " ", 
                  SubsuperscriptBox["m", "CB", "2"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "CB", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], "2"], "-", 
                    RowBox[{
                    SubscriptBox["m", "BA"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["m", "BA"], "+", 
                    SubscriptBox["m", "CB"]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SubscriptBox["k", "BA"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                  SubscriptBox["k", "CB"], " ", 
                  SubscriptBox["l", "OC"], " ", 
                  SubscriptBox["m", "CB"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"s", "-", "u"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "+", 
                    RowBox[{
                    SubscriptBox["k", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["l", "OC"]}], "-", 
                    RowBox[{"g", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}], " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox[
                   RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                  SubsuperscriptBox["l", "CB", "3"], " ", 
                  SubscriptBox["l", "OC"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "-", 
                    RowBox[{
                    SubscriptBox["m", "BA"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["m", "BA"], "+", 
                    SubscriptBox["m", "CB"]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
                 "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "CB", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["l", "OC"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "g", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["m", "BA"]}], ")"}], " ", 
                    SubscriptBox["m", "BA"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}]}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "+", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"]}]}], ")"}]}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}]}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], "+", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}], "]"}]}]}], ")"}]}], 
                    "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"]}]}], ")"}], " ", 
                    SubscriptBox["m", "BA"]}], "+", 
                    RowBox[{"2", " ", "g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}], "]"}], " ", 
                    SubsuperscriptBox["m", "BA", "2"]}]}], ")"}], " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    SubsuperscriptBox["l", "OC", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], "+", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "+", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["m", "BA"], "+", 
                    SubscriptBox["m", "CB"]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "+", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "q"}], "+", "u", "+", 
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["k", "OC"], " ", 
                    SubscriptBox["m", "OC"]}]}], ")"}]}]}], ")"}]}], "+", 
                 RowBox[{
                  SubscriptBox["l", "CB"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["l", "OC"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"s", "-", "u"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "s"}], "+", "u"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "+", 
                    RowBox[{"g", " ", 
                    SubscriptBox["k", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}]}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], ")"}]}], "]"}]}], 
                    ")"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}], "]"}]}]}], ")"}], 
                    " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}]}], ")"}], " ", 
                    SubscriptBox["m", "CB"]}], "+", 
                    RowBox[{"2", " ", 
                    SubscriptBox["k", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"g", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[Beta]1", "[", "t", "]"}], "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"]}]}], ")"}], " ", 
                    SubsuperscriptBox["m", "CB", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"\[Alpha]1", "[", "t", "]"}], "2"], " ", 
                    SubscriptBox["k", "CB"], " ", 
                    SubsuperscriptBox["l", "OC", "2"], " ", 
                    SubscriptBox["m", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["m", "BA"], "+", 
                    SubscriptBox["m", "CB"]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"], " ", 
                    SubscriptBox["m", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "q"}], "+", "u", "+", 
                    RowBox[{"g", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}], " ", 
                    SubscriptBox["k", "OC"], " ", 
                    SubscriptBox["m", "OC"]}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SubscriptBox["J", "BA"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                  RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "CB", "2"], " ", 
               SubsuperscriptBox["l", "OC", "2"]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["J", "CB"], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "CB", "2"], " ", 
                  SubscriptBox["m", "BA"]}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["J", "OC"], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "OC", "2"], " ", 
                  SubscriptBox["m", "BA"]}]}], ")"}]}], "-", 
              RowBox[{
               SubsuperscriptBox["l", "OC", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["J", "CB"], "+", 
                 RowBox[{
                  SubscriptBox["l", "CB"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], "2"], " ", 
                    SubscriptBox["k", "CB"]}], "+", 
                    RowBox[{
                    SubscriptBox["l", "CB"], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}]}], ")"}], " ", 
               SubscriptBox["m", "CB"]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                  RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["k", "CB", "2"], " ", 
               SubsuperscriptBox["l", "OC", "2"], " ", 
               SubsuperscriptBox["m", "CB", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SubsuperscriptBox["k", "BA", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                  RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubscriptBox["J", "OC"], " ", 
               SubsuperscriptBox["l", "CB", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "OC", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], "2"], " ", 
                  SubscriptBox["J", "CB"]}], "+", 
                 RowBox[{
                  SubscriptBox["l", "CB"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["l", "CB"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], ")"}]}], "]"}], 
                    "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], ")"}]}], "]"}]}], 
                    ")"}], " ", 
                    SubscriptBox["m", "BA"]}]}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["k", "CB"]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Beta]", "[", "t", "]"}], "-", 
                    RowBox[{"\[Gamma]", "[", "t", "]"}]}], "]"}], " ", 
                    SubscriptBox["l", "CB"]}]}], ")"}], " ", 
                    SubscriptBox["m", "CB"]}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}], "\[Equal]", 
        RowBox[{
         RowBox[{"\[Gamma]1", "'"}], "[", "t", "]"}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Beta]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Gamma]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Alpha]1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Beta]1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Gamma]1", "[", "0", "]"}], "\[Equal]", "0"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"sol", " ", "=", " ", 
    RowBox[{"NDSolve", "[", 
     RowBox[{"eqns", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", "t", "]"}], ",", 
        RowBox[{"\[Beta]", "[", "t", "]"}], ",", 
        RowBox[{"\[Gamma]", "[", "t", "]"}], ",", 
        RowBox[{"\[Alpha]1", "[", "t", "]"}], ",", 
        RowBox[{"\[Beta]1", "[", "t", "]"}], ",", 
        RowBox[{"\[Gamma]1", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], " ", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", "t", "]"}], "/.", "sol"}], ")"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", "[", "t", "]"}], "/.", "sol"}], ")"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]", "[", "t", "]"}], "/.", "sol"}], ")"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"15", "-", 
         RowBox[{"10", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]1", "[", "t", "]"}], "/.", "sol"}], ")"}]}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", "-", 
           RowBox[{"10", "*", 
            RowBox[{"\[Beta]1", "[", "t", "]"}]}]}], "/.", "sol"}], ")"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"-", "10"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]1", "[", "t", "]"}], "/.", "sol"}], ")"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{
  3.761472557213296*^9, {3.761475307397786*^9, 3.7614753196773057`*^9}, {
   3.7614755887153144`*^9, 3.761475599347494*^9}, 3.761475658160636*^9, {
   3.761475731146381*^9, 3.761475732458648*^9}, 3.7614757775157676`*^9, {
   3.7614758580752945`*^9, 3.7614758723281965`*^9}, {3.7614759248205147`*^9, 
   3.761475926057769*^9}, {3.761475958212368*^9, 3.761475970631936*^9}, {
   3.7614760133702326`*^9, 3.7614760137593203`*^9}, {3.7614761121873074`*^9, 
   3.7614761340298824`*^9}, {3.761476194916089*^9, 3.761476197749668*^9}, {
   3.761476320052226*^9, 3.7614763225237255`*^9}, {3.761476415542719*^9, 
   3.7614764421142206`*^9}, 3.761476476636642*^9, {3.7614776728160677`*^9, 
   3.761477672958088*^9}, {3.7614782052921605`*^9, 3.7614782090729713`*^9}, {
   3.7614786367096415`*^9, 3.76147864044339*^9}, {3.761478757589774*^9, 
   3.7614787613245754`*^9}, {3.761478803831579*^9, 3.76147881821061*^9}, {
   3.761490657188796*^9, 3.7614906575218644`*^9}, {3.761490688455518*^9, 
   3.761490700257016*^9}, {3.761490765176474*^9, 3.761490770782651*^9}, {
   3.7614909176238885`*^9, 3.7614912433215966`*^9}, 3.761491277982885*^9, {
   3.7614914739259477`*^9, 3.7614915037580585`*^9}, {3.7614915756294513`*^9, 
   3.7614915930710707`*^9}, {3.7615023188648357`*^9, 
   3.7615023967666993`*^9}, {3.7615024442134104`*^9, 3.761502459721458*^9}, {
   3.761502621172868*^9, 3.7615026238883066`*^9}, {3.761503174729884*^9, 
   3.761503179720835*^9}, 3.76150482245242*^9, {3.761504916244914*^9, 
   3.7615049199532804`*^9}, {3.761547616226598*^9, 3.7615476210145693`*^9}, {
   3.7615553099671693`*^9, 3.761555345794897*^9}, {3.7615699779167147`*^9, 
   3.761570022451749*^9}, {3.7615712714129543`*^9, 3.761571272930262*^9}, {
   3.761649697304985*^9, 3.7616497505241656`*^9}, {3.7616498039236073`*^9, 
   3.761649879894539*^9}, {3.7616499108922434`*^9, 3.7616499367568836`*^9}, {
   3.7616499706248846`*^9, 3.761650049281371*^9}, {3.761650086480297*^9, 
   3.761650108619913*^9}, {3.7616501560362687`*^9, 3.761650541113947*^9}, {
   3.7616505739447575`*^9, 3.76165070990201*^9}, {3.7616507671421957`*^9, 
   3.7616507790606875`*^9}, {3.7616508315769205`*^9, 
   3.7616508373151083`*^9}, {3.761650870333413*^9, 3.761650955332514*^9}, {
   3.7616561540399714`*^9, 3.7616561597221394`*^9}, {3.7616563696896343`*^9, 
   3.7616564340629015`*^9}, {3.7616567889833837`*^9, 3.761656813887454*^9}, {
   3.761656962189706*^9, 3.761656972829913*^9}, {3.7616570044124947`*^9, 
   3.7616570094145365`*^9}, {3.761657077467841*^9, 3.7616570982664747`*^9}, 
   3.761657232569234*^9, {3.7616617551107454`*^9, 3.7616617625223002`*^9}, {
   3.7616647505849237`*^9, 3.761664767755394*^9}, {3.761664808882204*^9, 
   3.761664886301054*^9}, {3.76173323847168*^9, 3.7617333367526884`*^9}, {
   3.761733729569865*^9, 3.7617337306970835`*^9}, {3.7617337647191896`*^9, 
   3.7617338900918584`*^9}, {3.7617340231444063`*^9, 3.761734175476554*^9}, {
   3.7617346857220173`*^9, 3.7617346903279505`*^9}, {3.7617348831383944`*^9, 
   3.7617348891206107`*^9}, {3.761734969090128*^9, 3.761734973889103*^9}, {
   3.76173501502081*^9, 3.7617350385937147`*^9}, {3.76173520006015*^9, 
   3.7617352119219294`*^9}, {3.7617356898760333`*^9, 
   3.7617356974465904`*^9}, {3.7620900976843967`*^9, 
   3.7620901131816716`*^9}, {3.762090233336789*^9, 3.7620902980266933`*^9}, {
   3.762091073898381*^9, 3.762091126521581*^9}, {3.7620911993736744`*^9, 
   3.7620913053773713`*^9}, {3.7620915132675576`*^9, 
   3.7620915348970366`*^9}, {3.7620916120753374`*^9, 3.762091744147606*^9}, 
   3.762091958446108*^9, {3.7620922686059637`*^9, 3.7620923293516693`*^9}, {
   3.7620933635428343`*^9, 3.7620933661303644`*^9}, {3.762093679174692*^9, 
   3.7620936846598797`*^9}, {3.7620977807545905`*^9, 
   3.7620977944744363`*^9}, {3.762100976455385*^9, 3.7621010812577314`*^9}, {
   3.7621011151111884`*^9, 3.7621011724887533`*^9}, {3.7621014054838533`*^9, 
   3.7621014268775454`*^9}, {3.762101540821617*^9, 3.762101549223467*^9}, {
   3.762101589382406*^9, 3.7621015933973026`*^9}, 3.762101672219636*^9, {
   3.7621018172506547`*^9, 3.762101831514818*^9}, {3.762101911223879*^9, 
   3.762101976730361*^9}, {3.762102095665739*^9, 3.7621021193899364`*^9}, {
   3.762102217274911*^9, 3.762102265507535*^9}, {3.7622484194870377`*^9, 
   3.762248428298976*^9}, {3.7622484761887827`*^9, 3.7622484794145026`*^9}, {
   3.7622485492830763`*^9, 3.762248558912198*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"9a60bc33-53d8-4ebc-9dd0-cdb435ff7fcb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      InterpretationBox[
       RowBox[{
        TagBox["InterpolatingFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.0983151015744774`, 0.4625172029367017}, {
                    1.3330931498728564`, 0.5382514336369828}, {
                    1.4032757312705517`, 0.5474861224751146}}], 
                    
                    LineBox[{{2.1937764192328597`, 0.5474861224751146}, {
                    2.366630671292311, 0.5237377653674166}, {
                    2.715144330593142, 0.4691647053995199}, {
                    2.7770159705668744`, 0.4625172029367017}}], 
                    LineBox[CompressedData["
1:eJwVkXswE3AcwCettJNhVGO0zWsKzSbHyX5fyqPzyOimhbq6RLTjxCXLoy5a
IYXqxNnKq6iopK7XFSfSiTvNHcp+VunhVSuPSPr1x+9+97n73Od33++Psz8p
PHYZhUJxJef/nbplgeqUQ4ejataLkbL3KIp2tzbP2RjC9PurRaJhJHrgvnqu
xAR6OFU3JzwwSi8qcpdpTeFe++XtbrMYZesGM2eDzWBLXnrfj8ARRJ2R1uIm
cxjl/dVfZTOCtLa3LnT/WQNzlfctkp9hVDCsu9JzYB2Us+SFIVsxKmwzjFM3
M6GjQXe7ZFiDooRM8Xe2JXSc1E5TKzWobquUlZDHgq+c6l/hvRoUlC2r/9xn
Bactu30uWmP0xC9VkuG9Hvqeao4z92LUWl63XxHAhs4i+0B6PkafPt6m6U+w
YcaPwX9YgVHSkUYfhYoDzjRuZ0QpRjVrLXbTA7nQW1jC6JRj5KOXpXd1kQs1
QsnAeDRGrMdyprbRBgZeflna44/RtbMfTO0ktuAh15h888aoSLmtPIVmB+KP
B0W+vhjxuujU1rt20JLJrFeEYkRpT9U8j7SHcMO2tFzSE1H7ArtoDiAz9isM
jid+VHmJ+o4D7KKn7+DLyH5nomVjB3nQku+laUjEKLVOwdM3doTg4rCyb7EY
NfJCd3bdd4ScxrwpAzKveMqQXnFoA2RZT0sMpBgpX29uSDLZCAVvHcTREowi
JiL7Qzo2wiBPemOIcICGkTJ0zAmsPFWDD4g/Ouo5lcB2Bv8YupVRDEZjQunC
crUzxE+N+c+QfsUl7RdVpgtUy6uavPaR/3tFDRjnboKgy5EFKwlrfbhuvv2b
4F3n5Nla4uvidup1i/iQn/EmZ5b0asVm/KwyPiwO9FYlk/kzbDhrT+v4AE4u
p5qiMLKlfJg87+cKjooNtEeET2RzjFRKV9g7X9yyi/jNq8ytm366wgk7079s
0rvinpvWHioAeDSqVRNWBvnmCq4LIKX0TIfjHtJPbM5VLQiAZroosiRs4FLV
zZAIYXIsTdlK/MML/isU9UIIoSaekxAWmIXNLy0JoZlrzvhN3vsHwchpqg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$4046#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, 
                   AxesOrigin -> {0, 0.4625172029367017}, 
                   FrameTicks -> {{{}, {}}, {{}, {}}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.4625172029367017}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 20.}, {0.4625172029367017, 
                    0.5474861224751146}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.0983151015744774`, 0.4625172029367017}, {
                    1.3330931498728564`, 0.5382514336369828}, {
                    1.4032757312705517`, 0.5474861224751146}}], 
                    
                    LineBox[{{2.1937764192328597`, 0.5474861224751146}, {
                    2.366630671292311, 0.5237377653674166}, {
                    2.715144330593142, 0.4691647053995199}, {
                    2.7770159705668744`, 0.4625172029367017}}], 
                    LineBox[CompressedData["
1:eJwVkXswE3AcwCettJNhVGO0zWsKzSbHyX5fyqPzyOimhbq6RLTjxCXLoy5a
IYXqxNnKq6iopK7XFSfSiTvNHcp+VunhVSuPSPr1x+9+97n73Od33++Psz8p
PHYZhUJxJef/nbplgeqUQ4ejataLkbL3KIp2tzbP2RjC9PurRaJhJHrgvnqu
xAR6OFU3JzwwSi8qcpdpTeFe++XtbrMYZesGM2eDzWBLXnrfj8ARRJ2R1uIm
cxjl/dVfZTOCtLa3LnT/WQNzlfctkp9hVDCsu9JzYB2Us+SFIVsxKmwzjFM3
M6GjQXe7ZFiDooRM8Xe2JXSc1E5TKzWobquUlZDHgq+c6l/hvRoUlC2r/9xn
Bactu30uWmP0xC9VkuG9Hvqeao4z92LUWl63XxHAhs4i+0B6PkafPt6m6U+w
YcaPwX9YgVHSkUYfhYoDzjRuZ0QpRjVrLXbTA7nQW1jC6JRj5KOXpXd1kQs1
QsnAeDRGrMdyprbRBgZeflna44/RtbMfTO0ktuAh15h888aoSLmtPIVmB+KP
B0W+vhjxuujU1rt20JLJrFeEYkRpT9U8j7SHcMO2tFzSE1H7ArtoDiAz9isM
jid+VHmJ+o4D7KKn7+DLyH5nomVjB3nQku+laUjEKLVOwdM3doTg4rCyb7EY
NfJCd3bdd4ScxrwpAzKveMqQXnFoA2RZT0sMpBgpX29uSDLZCAVvHcTREowi
JiL7Qzo2wiBPemOIcICGkTJ0zAmsPFWDD4g/Ouo5lcB2Bv8YupVRDEZjQunC
crUzxE+N+c+QfsUl7RdVpgtUy6uavPaR/3tFDRjnboKgy5EFKwlrfbhuvv2b
4F3n5Nla4uvidup1i/iQn/EmZ5b0asVm/KwyPiwO9FYlk/kzbDhrT+v4AE4u
p5qiMLKlfJg87+cKjooNtEeET2RzjFRKV9g7X9yyi/jNq8ytm366wgk7079s
0rvinpvWHioAeDSqVRNWBvnmCq4LIKX0TIfjHtJPbM5VLQiAZroosiRs4FLV
zZAIYXIsTdlK/MML/isU9UIIoSaekxAWmIXNLy0JoZlrzvhN3vsHwchpqg==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$4046#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, 
                   AxesOrigin -> {0, 0.4625172029367017}, 
                   FrameTicks -> {{{}, {}}, {{}, {}}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.4625172029367017}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 20.}, {0.4625172029367017, 
                    0.5474861224751146}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       InterpolatingFunction[{{0., 20.}}, {
        5, 7, 1, {647}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
         False}, CompressedData["
1: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
Xf0mNsq6m69IDbDx32+hIf4DyIMGNA==
        "], {Developer`PackedArrayForm, CompressedData["
1:eJwl1W1EKIAVANDWWpIkSZKkJUmSJEmSJEnyJEmSJEmSliRJkiRPkiRJkiRP
kiRJkiRJkiRJkiRJkiRJnmSn7XLc//fz3w3/qWj7R0BAwO/AgP/FTwoimBBC
CSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOfAgopopgSSinjF+VU
UEkV1dRQSx31NNBIE8200Eob7XTQSRfd9NBLH/0MMMjQT00YZoRRxhhngkmm
mGaGWeaYZ4E/LLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLFNTfc
csc9DzzyxDMvvPLGOx988pcvvgkwCIEEEUwIoYQRTgSRRBFNDLHEEU8CiSSR
TAqppJFOBplkkU0OueSRTwGFFFFMCaWU8YtyKqikimpqqKWOehpopIlmWmjl
Z8jb6aCTLrrpoZc++hlgkCF+M8wIo4wxzgSTTDHNDLPMMc8Cf1hkiWVWWGWN
dTbYZIttdthlj30OOOSIY0445YxzLrjkimtuuOWOex545IlnXnjljXc++OQv
X3zzs/yBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8B
hRRRTAmllPGLciqopIpqaqiljnoaaKSJZlpopY12Ouiki2566KWPfgYYZCjw
/zdxmBFGGWOcCSaZYpoZZpljngX+sMgSy6ywyhrrbLDJFtvssMse+xxwyBHH
nHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyV+++Cbgn/pPEMGEEEoY4UQQ
SRTRxBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQSBHFlFBKGb8op4JKqqim
hlrqqKeBRppopoVW2ming0666KaHXvroZ4BBhvjNMCOMMsY4E0wyxTQzzDLH
PAv8YZEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCR
J5554ZU33vngk7988c3P4w8kiGBCCCWMcCKIJIpoYogljngSSCSJZFJIJY10
Msgki2xyyCWPfAoopIhiSiiljF+UU0ElVVRTQy111NNAI00000IrbbTTQSdd
dNNDL330M8AgQ/xmmBFGGWOcCSaZYpoZZpljngX+sMgSy6ywyhrrbLDJFtvs
sMse+xxwyBHHnHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyV+++CbgX/pP
EMGEEEoY4fwXz9ZFLQ==
         "], CompressedData["
1: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
z+p1pOIAwfIFNUPsTiMvlxptBhDZX/HxDPb6wFFVlcg/qpD+ktIIm6MsTBx9
/9J8K7i+5r/fty0yDjMo0KJR6uz5/8b75mW0nNfFihSDOAp1sX0zXs+OnzqI
pi/vtVDEZnGcED2YKYqur6nR82Bb8BxMMV+RQcNerobbeD04F+Y/E9pH0Izh
ZNMI9tETehljR5SRVFLb1zvY4Vdm+euWVdELnUuVEtgX8z4Vn2lRRxd/G/h1
4P159N5iieymiSp6G/Y9xf4yL2ic2qSJbjYW697Dbpszfpu8UwttV9cd9MaW
9j81N6WuhVLOe+aZYTtZPrgfEKCFzg8Yff5v/wuHioeDc7WQ10rh+gFshuLf
B6hbtVAvSW2BAjv1kcB57xEtZGaT2fYZxw+LbbvtxJwWWnXaHdONHRldq+zy
Uwv1bPKUlGGb23S8+/pDC42Zvv5wHzv+WoT11CctdE62itEf20C51f/SoBZi
heMj4thq13IffAnRQopPd8lM43g1cHCOtljTRJHcf15lYqdp3v1wQR2ffyY7
1Cyxl+O4e51sNBC1h+WBVRz/ogMskzWVamj2wOy+HOzAN3dbo3xOoBj2pUwz
bKF8D9VRBmVE46/3ig37k90TM+azCii8SkllFufT9khaychXKZS+M5iyE7vm
vnLUlWERBIU5PTXYX90KXP0+8CLrHas3n2CfPetfc+nbPlRFJTefg701X7kw
UrTe/PhYK9d/PpLTu2yxOarKbS70LRe7OSWIYlt5J+gcoNcuxE5btX2WpMkC
2VxCNKXYZUKlySUxnMA4AbJV2KeXy3K4mw6Af5OdSD22zQdJmsOOvPD+wDq5
GTuvSoh604QfWDeYiN7/+jvjfzy1g0IwoE9nQ8K+2iUorEkjBkxpgweXsdkp
pz+FzR2Gq7/5Zmnx95t5Eu10vlLAJh8cx499+qOrR4i7DJT12G6dwHY5+/L1
7EVZyEdsk1bY525xfSqVlYM9XgpjV7GjzmV4iL+Vgzu0pOIkbJm9VVRZgvKQ
G3biUwW2cMf7uhhLecim/mjYiy3nFf1Oy0UeND9KlX/BLvSarxY5JQ/HXNIP
rmPryBWUZkjIQwD30iV6vL8+f328WCjkgY9BLIEb+0+vqcafTjk4aV9YpIT9
OZl+Ll1DDi4k739ljn2O08SnNVkWBLzjS7yx41XKbCxfy8AZ+3SxWGweNlrW
mHJpsKoytXyE7af4kJn6oBQstVNFVGKnUHwXl/eQAA+dy5lt2K8PgJRAnjgE
d+rHD2BXOZlEHWsTheOcHp7j2ESFWNaDhyIwKfBkegbbU0qWv9pLGOgE+j8v
YF8PW2Q+BUIw6A2KVDi+eW/XrKhu8oLlIrcXHTbHgOiBpW4ecGWyM9qDHfvq
u+6fzIMwYhQ2vBf73PHDPsVu+8Gm7sQuDuwLjFUBUke5wEo6fv9+7NSdwUWq
Y+zwmVO2+xD2Mcv2qkc3WUHqpQ4rP3ZYBNusoeBeIAtcuPZffj0aUPsztLAT
mJ1sGaSwFzvzaW0NCdVdjJLbEthfI3aqj/3507z/XlCqCLbTvsDiQEo69Dzi
SOR/40s5fP7RWbcX1Vd8ovtvfobTRX9aNDmREunylf/m/9M1M+/dHS4kpxaT
T4/91111e9crbnSCbbSUGju4hUc66Pd+1CjKHkuJPXvVzTGd4yBibw66sYXX
ayFH8d0e20MoQbP16F9s8yExEddEHpSYO/Jy6b/zjPtQTfV5XjTXmGE4iz38
2+Du6Vw+xP9LaWYQew+PadH7cn70qWvwaQf2r/NzWz+jBNAuS6P+auw1OU47
GhFB1JGry5L+3/hNFWEMNYLot7vo12Dsg+lLwgWvBJFY0m6BQOz1HWG/GZ4L
ItLSWwcv7Ombf4rXcgXRU/OIIjds51LqfOYoQVRbErLmiL3rvrKXlJMg4vYU
Z7LGXqQ5pdChKIh+jfcq/BefXIPTFA67BJHFp/bLhtgub79KSvUIoM7uDiE1
7I/Pt/95qgigXrN1EznsG9VDtWFx/EjI4jCtEDZTSrpxzRs+JLmZ38343/sO
6yQXsfGi1APM+9Zw/szSmcbEaB1A/wMe7P6c
         "]}, {Automatic}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"\[Beta]", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      InterpretationBox[
       RowBox[{
        TagBox["InterpolatingFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{0.5862596614001542, 0.1424536165813728}, {
                    0.6794947448093132, 0.18073690263553222`}, {
                    0.8311003895481739, 0.2521189141808188}}], 
                    
                    LineBox[{{2.587330220950914, 0.2521189141808188}, {
                    2.715144330593142, 0.21305976616032515`}, {
                    3.0311456525202645`, 0.1424536165813728}}], 
                    
                    LineBox[{{3.9002581222436414`, 0.1424536165813728}, {
                    4.04445896588967, 0.15924802292303997`}, {
                    4.394500929321849, 0.20624171307516703`}, {
                    4.721119740020974, 0.2389445533285403}, {
                    5.064583017565598, 0.2521189141808188}}], 
                    LineBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAC0AAAACAAAA1CRrnIdeFEB2BMdetyLQPwX2Wabg
sBVAyt7+40BFzz/iJK2RzfwWQJ5ApHqpucw/jN7yms9kGEBUmYQtQpjJP43D
DGfVtBlAn+rj8nxixz9bMxlR8CAbQBvx1+RoZsY/p0NZHGqGHED8gswtDtfG
P0t/barn0x1AV6MawFcOyD+8RXRWej0fQOovjXlUk8k/wpunYohHIEAtu8xV
labKP+XkrgoD7SBAXrAd/aUdyz9vc69BiKAhQGeFiJbO9co/pRcaWg9IIkDb
NqeWfGbKP0EBfgGh/SJA/vzoU8OryT8cu3sZ4q8jQH0vdcatH8k/oorjEiVW
JEDZRJomvOjIP4+fRJtyCiVALqMCBzAByT8oyg8FwrIlQOKQrGUkTck/AMV0
38BXJkAsBERZfKbJPz4F00jKCidAXuKpxg/1yT8oW5uT1bEnQFcswX0FGso/
ePZcbetmKEChQZyB+hfKP3SniCgDEClAMN9bGEj6yT+vKE5UyrUpQIvVHTcr
1Mk/Ue8MD5xpKkBMGGW2frLJP5/LNatvEStAK4Sw+2OkyT9T7VfWTccrQK4p
5BXqqck/R98Tctt5LEA88rUzYr7JP+bmOe9qIC1AbMeaMC3WyT/rM1n7BNUt
QOrA2uke7Mk/nJbi6KB9LkD1vMEB8vfJP4zJBUfsIi9A3u0C2Yb6yT/iQSI0
QtYvQPBrP7rb9ck/8mdUAc0+MEB7FL/3o+7JP6ZRFDB+mTBAqIsPPz3oyT96
IyEXh/IwQPBNMdJJ5sk/JADj7pBFMUCnUq9I6ujJP4F/IQ6gnzFATMSmQFzv
yT+0CRUesPMxQAHwfQO29sk/mjaFdcVOMkAPV+3F4P3JP59LQoUyqDJAvxvK
P6oCyj96a7SFoPsyQI71147UBMo/CC6jzRNWM0CWex8tSgXKP2z7RgaIqjNA
tzw+nfUEyj8yFFD6//8zQIoia3beBMo/0CRTZg==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$4100#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, 
                   AxesOrigin -> {0, 0.1424536165813728}, 
                   FrameTicks -> {{{}, {}}, {{}, {}}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.1424536165813728}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 20.}, {0.1424536165813728, 
                    0.2521189141808188}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{0.5862596614001542, 0.1424536165813728}, {
                    0.6794947448093132, 0.18073690263553222`}, {
                    0.8311003895481739, 0.2521189141808188}}], 
                    
                    LineBox[{{2.587330220950914, 0.2521189141808188}, {
                    2.715144330593142, 0.21305976616032515`}, {
                    3.0311456525202645`, 0.1424536165813728}}], 
                    
                    LineBox[{{3.9002581222436414`, 0.1424536165813728}, {
                    4.04445896588967, 0.15924802292303997`}, {
                    4.394500929321849, 0.20624171307516703`}, {
                    4.721119740020974, 0.2389445533285403}, {
                    5.064583017565598, 0.2521189141808188}}], 
                    LineBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAC0AAAACAAAA1CRrnIdeFEB2BMdetyLQPwX2Wabg
sBVAyt7+40BFzz/iJK2RzfwWQJ5ApHqpucw/jN7yms9kGEBUmYQtQpjJP43D
DGfVtBlAn+rj8nxixz9bMxlR8CAbQBvx1+RoZsY/p0NZHGqGHED8gswtDtfG
P0t/barn0x1AV6MawFcOyD+8RXRWej0fQOovjXlUk8k/wpunYohHIEAtu8xV
labKP+XkrgoD7SBAXrAd/aUdyz9vc69BiKAhQGeFiJbO9co/pRcaWg9IIkDb
NqeWfGbKP0EBfgGh/SJA/vzoU8OryT8cu3sZ4q8jQH0vdcatH8k/oorjEiVW
JEDZRJomvOjIP4+fRJtyCiVALqMCBzAByT8oyg8FwrIlQOKQrGUkTck/AMV0
38BXJkAsBERZfKbJPz4F00jKCidAXuKpxg/1yT8oW5uT1bEnQFcswX0FGso/
ePZcbetmKEChQZyB+hfKP3SniCgDEClAMN9bGEj6yT+vKE5UyrUpQIvVHTcr
1Mk/Ue8MD5xpKkBMGGW2frLJP5/LNatvEStAK4Sw+2OkyT9T7VfWTccrQK4p
5BXqqck/R98Tctt5LEA88rUzYr7JP+bmOe9qIC1AbMeaMC3WyT/rM1n7BNUt
QOrA2uke7Mk/nJbi6KB9LkD1vMEB8vfJP4zJBUfsIi9A3u0C2Yb6yT/iQSI0
QtYvQPBrP7rb9ck/8mdUAc0+MEB7FL/3o+7JP6ZRFDB+mTBAqIsPPz3oyT96
IyEXh/IwQPBNMdJJ5sk/JADj7pBFMUCnUq9I6ujJP4F/IQ6gnzFATMSmQFzv
yT+0CRUesPMxQAHwfQO29sk/mjaFdcVOMkAPV+3F4P3JP59LQoUyqDJAvxvK
P6oCyj96a7SFoPsyQI71147UBMo/CC6jzRNWM0CWex8tSgXKP2z7RgaIqjNA
tzw+nfUEyj8yFFD6//8zQIoia3beBMo/0CRTZg==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$4100#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, 
                   AxesOrigin -> {0, 0.1424536165813728}, 
                   FrameTicks -> {{{}, {}}, {{}, {}}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.1424536165813728}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 20.}, {0.1424536165813728, 
                    0.2521189141808188}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       InterpolatingFunction[{{0., 20.}}, {
        5, 7, 1, {647}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
         False}, CompressedData["
1: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
Xf0mNsq6m69IDbDx32+hIf4DyIMGNA==
        "], {Developer`PackedArrayForm, CompressedData["
1:eJwl1W1EKIAVANDWWpIkSZKkJUmSJEmSJEnyJEmSJEmSliRJkiRPkiRJkiRP
kiRJkiRJkiRJkiRJkiRJnmSn7XLc//fz3w3/qWj7R0BAwO/AgP/FTwoimBBC
CSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOfAgopopgSSinjF+VU
UEkV1dRQSx31NNBIE8200Eob7XTQSRfd9NBLH/0MMMjQT00YZoRRxhhngkmm
mGaGWeaYZ4E/LLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLFNTfc
csc9DzzyxDMvvPLGOx988pcvvgkwCIEEEUwIoYQRTgSRRBFNDLHEEU8CiSSR
TAqppJFOBplkkU0OueSRTwGFFFFMCaWU8YtyKqikimpqqKWOehpopIlmWmjl
Z8jb6aCTLrrpoZc++hlgkCF+M8wIo4wxzgSTTDHNDLPMMc8Cf1hkiWVWWGWN
dTbYZIttdthlj30OOOSIY0445YxzLrjkimtuuOWOex545IlnXnjljXc++OQv
X3zzs/yBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8B
hRRRTAmllPGLciqopIpqaqiljnoaaKSJZlpopY12Ouiki2566KWPfgYYZCjw
/zdxmBFGGWOcCSaZYpoZZpljngX+sMgSy6ywyhrrbLDJFtvssMse+xxwyBHH
nHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyV+++Cbgn/pPEMGEEEoY4UQQ
SRTRxBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQSBHFlFBKGb8op4JKqqim
hlrqqKeBRppopoVW2ming0666KaHXvroZ4BBhvjNMCOMMsY4E0wyxTQzzDLH
PAv8YZEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCR
J5554ZU33vngk7988c3P4w8kiGBCCCWMcCKIJIpoYogljngSSCSJZFJIJY10
Msgki2xyyCWPfAoopIhiSiiljF+UU0ElVVRTQy111NNAI00000IrbbTTQSdd
dNNDL330M8AgQ/xmmBFGGWOcCSaZYpoZZpljngX+sMgSy6ywyhrrbLDJFtvs
sMse+xxwyBHHnHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyV+++CbgX/pP
EMGEEEoY4fwXz9ZFLQ==
         "], CompressedData["
1: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
Y3vi/wfsT1mV
         "]}, {Automatic}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"\[Gamma]", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      InterpretationBox[
       RowBox[{
        TagBox["InterpolatingFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{
                    3.389830508474576*^-7, -6.383186596356275*^-14}, {
                    0.32603538944914895`, 0.011544954280494214`}, {
                    0.6794947448093132, 0.12482233911057876`}, {
                    0.9288066995557377, 0.23858073462326096`}}], 
                    LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAFXqVI+JkBEDKzlRC0InOP/OJPped
uAVAcgzLja9wxz/aIG6kZlIIQO0NWI7zIrg/Ws2C7VkkC0AdDZP6aCWmP4nQ
P7xUxg1AncZ7gr0JpT9bCrKmhi0QQLZJlYPA0LE/Prc2DfiTEUBPaUrUb/q8
P3iPjzZt4hJAk9CIuzDNwj9/8tp990wUQDvGEF9C3cQ/BfZZpuCwFUDyHW5M
JvrDP+IkrZHN/BZAILoI49RGwT+M3vKaz2QYQOQslN7DPbs/jcMMZ9W0GUCL
jeyNJ2C1P1szGVHwIBtAlT4raZGysT+nQ1kcaoYcQGyq3okFGbE/S39tqufT
HUBB85aZJYGyP7xFdFZ6PR9AsgYYZEfWtD/Cm6diiEcgQJ8zRBoVmbY/5eSu
CgPtIEBXb3WlhD63P29zr0GIoCFAW+0E/F+Ttj+lFxpaD0giQMJ/7HOe/LQ/
QQF+AaH9IkAXUTCGwtqyPxy7exniryNAmIpLmSz8sD+iiuMSJVYkQMe3sATw
na8/j59Em3IKJUCNnk0M5XuuPyjKDwXCsiVAASb0/OJxrj8AxXTfwFcmQHZ2
JTiV1K4/PgXTSMoKJ0CrUpjCqyCvPyhbm5PVsSdA4MUVitXqrj949lxt62Yo
QFtsMvlrCa4/dKeIKAMQKUDfWEkQpLysP68oTlTKtSlAnwNBO/dEqz9R7wwP
nGkqQLaMVjI+wqk/n8s1q28RK0B4wWY+Up6oP1PtV9ZNxytACdPFvxu/pz9H
3xNy23ksQNnNWOPXMKc/5uY572ogLUBq5prIRM+mP+szWfsE1S1AsFJccw1l
pj+cluLooH0uQJJLgxCV6KU/jMkFR+wiL0Aw+BKRxk6lP+JBIjRC1i9ATVFx
GF2LpD/yZ1QBzT4wQFmC3uS8yaM/plEUMH6ZMEAc9jMwsP6iP3ojIReH8jBA
Nxg9RRNMoj8kAOPukEUxQConybRovKE/gX8hDqCfMUDV5p1sGTahP7QJFR6w
8zFAKP+edxjFoD+aNoV1xU4yQKp4mu1rTqA/n0tChTKoMkBCGAsCNq2fP3pr
tIWg+zJAk729++zCnj8ILqPNE1YzQEK3W3hDvJ0/bPtGBoiqM0Bsl9SjRMac
PzIUUPr//zNA8IWDP73Umz8pTIJ4
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$4154#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{{}, {}}, {{}, {}}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 20.}, {-6.383186596356275*^-14, 
                    0.23858073462326096`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{
                    3.389830508474576*^-7, -6.383186596356275*^-14}, {
                    0.32603538944914895`, 0.011544954280494214`}, {
                    0.6794947448093132, 0.12482233911057876`}, {
                    0.9288066995557377, 0.23858073462326096`}}], 
                    LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAFXqVI+JkBEDKzlRC0InOP/OJPped
uAVAcgzLja9wxz/aIG6kZlIIQO0NWI7zIrg/Ws2C7VkkC0AdDZP6aCWmP4nQ
P7xUxg1AncZ7gr0JpT9bCrKmhi0QQLZJlYPA0LE/Prc2DfiTEUBPaUrUb/q8
P3iPjzZt4hJAk9CIuzDNwj9/8tp990wUQDvGEF9C3cQ/BfZZpuCwFUDyHW5M
JvrDP+IkrZHN/BZAILoI49RGwT+M3vKaz2QYQOQslN7DPbs/jcMMZ9W0GUCL
jeyNJ2C1P1szGVHwIBtAlT4raZGysT+nQ1kcaoYcQGyq3okFGbE/S39tqufT
HUBB85aZJYGyP7xFdFZ6PR9AsgYYZEfWtD/Cm6diiEcgQJ8zRBoVmbY/5eSu
CgPtIEBXb3WlhD63P29zr0GIoCFAW+0E/F+Ttj+lFxpaD0giQMJ/7HOe/LQ/
QQF+AaH9IkAXUTCGwtqyPxy7exniryNAmIpLmSz8sD+iiuMSJVYkQMe3sATw
na8/j59Em3IKJUCNnk0M5XuuPyjKDwXCsiVAASb0/OJxrj8AxXTfwFcmQHZ2
JTiV1K4/PgXTSMoKJ0CrUpjCqyCvPyhbm5PVsSdA4MUVitXqrj949lxt62Yo
QFtsMvlrCa4/dKeIKAMQKUDfWEkQpLysP68oTlTKtSlAnwNBO/dEqz9R7wwP
nGkqQLaMVjI+wqk/n8s1q28RK0B4wWY+Up6oP1PtV9ZNxytACdPFvxu/pz9H
3xNy23ksQNnNWOPXMKc/5uY572ogLUBq5prIRM+mP+szWfsE1S1AsFJccw1l
pj+cluLooH0uQJJLgxCV6KU/jMkFR+wiL0Aw+BKRxk6lP+JBIjRC1i9ATVFx
GF2LpD/yZ1QBzT4wQFmC3uS8yaM/plEUMH6ZMEAc9jMwsP6iP3ojIReH8jBA
Nxg9RRNMoj8kAOPukEUxQConybRovKE/gX8hDqCfMUDV5p1sGTahP7QJFR6w
8zFAKP+edxjFoD+aNoV1xU4yQKp4mu1rTqA/n0tChTKoMkBCGAsCNq2fP3pr
tIWg+zJAk729++zCnj8ILqPNE1YzQEK3W3hDvJ0/bPtGBoiqM0Bsl9SjRMac
PzIUUPr//zNA8IWDP73Umz8pTIJ4
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$4154#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{{}, {}}, {{}, {}}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 20.}, {-6.383186596356275*^-14, 
                    0.23858073462326096`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       InterpolatingFunction[{{0., 20.}}, {
        5, 7, 1, {647}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
         False}, CompressedData["
1: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
Xf0mNsq6m69IDbDx32+hIf4DyIMGNA==
        "], {Developer`PackedArrayForm, CompressedData["
1:eJwl1W1EKIAVANDWWpIkSZKkJUmSJEmSJEnyJEmSJEmSliRJkiRPkiRJkiRP
kiRJkiRJkiRJkiRJkiRJnmSn7XLc//fz3w3/qWj7R0BAwO/AgP/FTwoimBBC
CSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOfAgopopgSSinjF+VU
UEkV1dRQSx31NNBIE8200Eob7XTQSRfd9NBLH/0MMMjQT00YZoRRxhhngkmm
mGaGWeaYZ4E/LLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLFNTfc
csc9DzzyxDMvvPLGOx988pcvvgkwCIEEEUwIoYQRTgSRRBFNDLHEEU8CiSSR
TAqppJFOBplkkU0OueSRTwGFFFFMCaWU8YtyKqikimpqqKWOehpopIlmWmjl
Z8jb6aCTLrrpoZc++hlgkCF+M8wIo4wxzgSTTDHNDLPMMc8Cf1hkiWVWWGWN
dTbYZIttdthlj30OOOSIY0445YxzLrjkimtuuOWOex545IlnXnjljXc++OQv
X3zzs/yBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8B
hRRRTAmllPGLciqopIpqaqiljnoaaKSJZlpopY12Ouiki2566KWPfgYYZCjw
/zdxmBFGGWOcCSaZYpoZZpljngX+sMgSy6ywyhrrbLDJFtvssMse+xxwyBHH
nHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyV+++Cbgn/pPEMGEEEoY4UQQ
SRTRxBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQSBHFlFBKGb8op4JKqqim
hlrqqKeBRppopoVW2ming0666KaHXvroZ4BBhvjNMCOMMsY4E0wyxTQzzDLH
PAv8YZEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCR
J5554ZU33vngk7988c3P4w8kiGBCCCWMcCKIJIpoYogljngSSCSJZFJIJY10
Msgki2xyyCWPfAoopIhiSiiljF+UU0ElVVRTQy111NNAI00000IrbbTTQSdd
dNNDL330M8AgQ/xmmBFGGWOcCSaZYpoZZpljngX+sMgSy6ywyhrrbLDJFtvs
sMse+xxwyBHHnHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyV+++CbgX/pP
EMGEEEoY4fwXz9ZFLQ==
         "], CompressedData["
1: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

         "]}, {Automatic}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"\[Alpha]1", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      InterpretationBox[
       RowBox[{
        TagBox["InterpolatingFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{3.389830508474576*^-7, 
                    1.5079822230020136`*^-6}, {0.04178402655446291, 
                    0.059073757952826184`}}], 
                    
                    LineBox[{{1.6430401126782908`, 0.059073757952826184`}, {
                    1.6840796572033543`, 0.03621124897393449}, {
                    1.888359957124747, -0.047636793534149464`}}], 
                    
                    LineBox[{{3.129626936597493, -0.047636793534149464`}, {
                    3.3927496486227655`, 0.018287039254568756`}, {
                    3.6136623484025834`, 0.059073757952826184`}}], 
                    LineBox[CompressedData["
1:eJwBAQP+/CFib1JlAgAAAC8AAAACAAAAZ3FyzLmdEkBcHetk6j6uP3iPjzZt
4hJAqPJMPdBfqj9/8tp990wUQKvmKHXPE3Y/BfZZpuCwFUDvNKTWhOCdv+Ik
rZHN/BZA0LNGDPg+pr+M3vKaz2QYQI22a7ps96O/jcMMZ9W0GUDddZzA/raW
v1szGVHwIBtAdNHFlJoGJr+nQ1kcaoYcQDHO4XSgv5A/S39tqufTHUDOT3pZ
wHCXP7xFdFZ6PR9AjOr5uLy4lD/Cm6diiEcgQKSVkuS08oc/5eSuCgPtIECc
VooHMPVbP29zr0GIoCFAWtkB4RtAfL+lFxpaD0giQKzo3T2m0YW/QQF+AaH9
IkCIDkpHwCCEvxy7exniryNAxhdYIq0Dd7+iiuMSJVYkQN9Tpsal30i/j59E
m3IKJUBz2IpR80hsPyjKDwXCsiVAXvtxe2qodT8AxXTfwFcmQIq7zM7Rd3Q/
PgXTSMoKJ0DKaAhhS8loPyhbm5PVsSdAvuFxqmuXRD949lxt62YoQFI3kqSv
DVm/dKeIKAMQKUCJMoIaHNBkv68oTlTKtSlAxScVlc1kZL9R7wwPnGkqQKJX
iMFh0lm/n8s1q28RK0Cukxovf5E6v1PtV9ZNxytAHq5tzWVBRj9H3xNy23ks
QByb52IuClQ/5uY572ogLUBsIzq9o7RTP+szWfsE1S1AOJ94qzLISD+cluLo
oH0uQNkqkEX40Cc/jMkFR+wiL0CxITNeMkY0v+JBIjRC1i9AEj+HPJrCQ7/y
Z1QBzT4wQODOYO2wJkS/plEUMH6ZMEBaVOJWOdA6v3ojIReH8jBAP3GPM+vk
Hb8kAOPukEUxQNyLiFY79SA/gX8hDqCfMUBzA/kfwSQyP7QJFR6w8zFAYShm
76SwMj+aNoV1xU4yQPijh+OVVig/n0tChTKoMkCGjgnJw7kFP3prtIWg+zJA
/IezT2NjFL8ILqPNE1YzQApOvw6anSO/bPtGBoiqM0A8GD1W5g8kvzIUUPr/
/zNA9z5F/K9EHL+gflp0
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$4208#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{{}, {}}, {{}, {}}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 20.}, {-0.047636793534149464`, 
                    0.059073757952826184`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{3.389830508474576*^-7, 
                    1.5079822230020136`*^-6}, {0.04178402655446291, 
                    0.059073757952826184`}}], 
                    
                    LineBox[{{1.6430401126782908`, 0.059073757952826184`}, {
                    1.6840796572033543`, 0.03621124897393449}, {
                    1.888359957124747, -0.047636793534149464`}}], 
                    
                    LineBox[{{3.129626936597493, -0.047636793534149464`}, {
                    3.3927496486227655`, 0.018287039254568756`}, {
                    3.6136623484025834`, 0.059073757952826184`}}], 
                    LineBox[CompressedData["
1:eJwBAQP+/CFib1JlAgAAAC8AAAACAAAAZ3FyzLmdEkBcHetk6j6uP3iPjzZt
4hJAqPJMPdBfqj9/8tp990wUQKvmKHXPE3Y/BfZZpuCwFUDvNKTWhOCdv+Ik
rZHN/BZA0LNGDPg+pr+M3vKaz2QYQI22a7ps96O/jcMMZ9W0GUDddZzA/raW
v1szGVHwIBtAdNHFlJoGJr+nQ1kcaoYcQDHO4XSgv5A/S39tqufTHUDOT3pZ
wHCXP7xFdFZ6PR9AjOr5uLy4lD/Cm6diiEcgQKSVkuS08oc/5eSuCgPtIECc
VooHMPVbP29zr0GIoCFAWtkB4RtAfL+lFxpaD0giQKzo3T2m0YW/QQF+AaH9
IkCIDkpHwCCEvxy7exniryNAxhdYIq0Dd7+iiuMSJVYkQN9Tpsal30i/j59E
m3IKJUBz2IpR80hsPyjKDwXCsiVAXvtxe2qodT8AxXTfwFcmQIq7zM7Rd3Q/
PgXTSMoKJ0DKaAhhS8loPyhbm5PVsSdAvuFxqmuXRD949lxt62YoQFI3kqSv
DVm/dKeIKAMQKUCJMoIaHNBkv68oTlTKtSlAxScVlc1kZL9R7wwPnGkqQKJX
iMFh0lm/n8s1q28RK0Cukxovf5E6v1PtV9ZNxytAHq5tzWVBRj9H3xNy23ks
QByb52IuClQ/5uY572ogLUBsIzq9o7RTP+szWfsE1S1AOJ94qzLISD+cluLo
oH0uQNkqkEX40Cc/jMkFR+wiL0CxITNeMkY0v+JBIjRC1i9AEj+HPJrCQ7/y
Z1QBzT4wQODOYO2wJkS/plEUMH6ZMEBaVOJWOdA6v3ojIReH8jBAP3GPM+vk
Hb8kAOPukEUxQNyLiFY79SA/gX8hDqCfMUBzA/kfwSQyP7QJFR6w8zFAYShm
76SwMj+aNoV1xU4yQPijh+OVVig/n0tChTKoMkCGjgnJw7kFP3prtIWg+zJA
/IezT2NjFL8ILqPNE1YzQApOvw6anSO/bPtGBoiqM0A8GD1W5g8kvzIUUPr/
/zNA9z5F/K9EHL+gflp0
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$4208#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{{}, {}}, {{}, {}}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 20.}, {-0.047636793534149464`, 
                    0.059073757952826184`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       InterpolatingFunction[{{0., 20.}}, {
        5, 7, 1, {647}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
         False}, CompressedData["
1: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
Xf0mNsq6m69IDbDx32+hIf4DyIMGNA==
        "], {Developer`PackedArrayForm, CompressedData["
1:eJwl1W1EKIAVANDWWpIkSZKkJUmSJEmSJEnyJEmSJEmSliRJkiRPkiRJkiRP
kiRJkiRJkiRJkiRJkiRJnmSn7XLc//fz3w3/qWj7R0BAwO/AgP/FTwoimBBC
CSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOfAgopopgSSinjF+VU
UEkV1dRQSx31NNBIE8200Eob7XTQSRfd9NBLH/0MMMjQT00YZoRRxhhngkmm
mGaGWeaYZ4E/LLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLFNTfc
csc9DzzyxDMvvPLGOx988pcvvgkwCIEEEUwIoYQRTgSRRBFNDLHEEU8CiSSR
TAqppJFOBplkkU0OueSRTwGFFFFMCaWU8YtyKqikimpqqKWOehpopIlmWmjl
Z8jb6aCTLrrpoZc++hlgkCF+M8wIo4wxzgSTTDHNDLPMMc8Cf1hkiWVWWGWN
dTbYZIttdthlj30OOOSIY0445YxzLrjkimtuuOWOex545IlnXnjljXc++OQv
X3zzs/yBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8B
hRRRTAmllPGLciqopIpqaqiljnoaaKSJZlpopY12Ouiki2566KWPfgYYZCjw
/zdxmBFGGWOcCSaZYpoZZpljngX+sMgSy6ywyhrrbLDJFtvssMse+xxwyBHH
nHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyV+++Cbgn/pPEMGEEEoY4UQQ
SRTRxBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQSBHFlFBKGb8op4JKqqim
hlrqqKeBRppopoVW2ming0666KaHXvroZ4BBhvjNMCOMMsY4E0wyxTQzzDLH
PAv8YZEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCR
J5554ZU33vngk7988c3P4w8kiGBCCCWMcCKIJIpoYogljngSSCSJZFJIJY10
Msgki2xyyCWPfAoopIhiSiiljF+UU0ElVVRTQy111NNAI00000IrbbTTQSdd
dNNDL330M8AgQ/xmmBFGGWOcCSaZYpoZZpljngX+sMgSy6ywyhrrbLDJFtvs
sMse+xxwyBHHnHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyV+++CbgX/pP
EMGEEEoY4fwXz9ZFLQ==
         "], CompressedData["
1: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
         "]}, {Automatic}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"\[Beta]1", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      InterpretationBox[
       RowBox[{
        TagBox["InterpolatingFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{
                    3.389830508474576*^-7, -5.491170249551672*^-7}, {
                    0.08565530476849412, 0.07491389487970083}}], 
                    
                    LineBox[{{1.51939078783415, 0.07491389487970083}, {
                    1.6840796572033543`, -0.047647332068577894`}, {
                    1.725555884643767, -0.0711799457680769}}], 
                    
                    LineBox[{{3.2628687077537766`, -0.0711799457680769}, {
                    3.3927496486227655`, -0.01770895349941962}, {
                    3.6820846028292404`, 0.07491389487970083}}], 
                    LineBox[CompressedData["
1:eJwBAQP+/CFib1JlAgAAAC8AAAACAAAA4recJLjSEkBTOIaYji2zP3iPjzZt
4hJA6VWdwZOQsj9/8tp990wUQLIfIBHIuXI/BfZZpuCwFUAXSv2NtXmov+Ik
rZHN/BZA+ldw9pP3sb+M3vKaz2QYQBYEZ9q/cbC/jcMMZ9W0GUCpevgKC+Oj
v1szGVHwIBtAeTsab3yZcr+nQ1kcaoYcQE40FdaOuJY/S39tqufTHUDlVlwB
WUqhP7xFdFZ6PR9APxCXQCfcnz/Cm6diiEcgQMlao1gVPpM/5eSuCgPtIEDt
tqo2zVduP29zr0GIoCFAI+bv35Ldg7+lFxpaD0giQM39jyUHQ5C/QQF+AaH9
IkDMmbpBuN2Ovxy7exniryNAODLaqbcvgr+iiuMSJVYkQNeqIcDgl1e/j59E
m3IKJUAgaQcmDmB1PyjKDwXCsiVAUxR8EeYFgT8AxXTfwFcmQDINhwkvoYA/
PgXTSMoKJ0BSLM5yT5F1Pyhbm5PVsSdAuRdGTLqRWj949lxt62YoQPB9oV5T
6ly/dKeIKAMQKUBl+pVtEDhsv68oTlTKtSlAur3sLqqcbL9R7wwPnGkqQAql
Otux5mG/n8s1q28RK0BSFczNS2g7v1PtV9ZNxytA/oM8+CLSVD9H3xNy23ks
QMXZUklEs2E/5uY572ogLUCf25Pb9d1hP+szWfsE1S1AgVHHDDkQWT+cluLo
oH0uQGHCVBqpT0U/jMkFR+wiL0C1FNuyaWcgv+JBIjRC1i9AZpszdewmRL/y
Z1QBzT4wQMaQK1YU/kW/plEUMH6ZMEDnffl4ck45v3ojIReH8jBABJ8vREtG
Cz8kAOPukEUxQBfiSaZw0js/gX8hDqCfMUBlh5+4tI1FP7QJFR6w8zFA7hbT
PPc3Rj+aNoV1xU4yQHOAETrXU0E/n0tChTKoMkAFdJo31OIzP3prtIWg+zJA
6ByIE5YLHT8ILqPNE1YzQBey+5B8sey+bPtGBoiqM0COwnJNcPcAvzIUUPr/
/zNAUdu5peQJ+z4ur1Q+
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$4262#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{{}, {}}, {{}, {}}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 20.}, {-0.0711799457680769, 
                    0.07491389487970083}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{
                    3.389830508474576*^-7, -5.491170249551672*^-7}, {
                    0.08565530476849412, 0.07491389487970083}}], 
                    
                    LineBox[{{1.51939078783415, 0.07491389487970083}, {
                    1.6840796572033543`, -0.047647332068577894`}, {
                    1.725555884643767, -0.0711799457680769}}], 
                    
                    LineBox[{{3.2628687077537766`, -0.0711799457680769}, {
                    3.3927496486227655`, -0.01770895349941962}, {
                    3.6820846028292404`, 0.07491389487970083}}], 
                    LineBox[CompressedData["
1:eJwBAQP+/CFib1JlAgAAAC8AAAACAAAA4recJLjSEkBTOIaYji2zP3iPjzZt
4hJA6VWdwZOQsj9/8tp990wUQLIfIBHIuXI/BfZZpuCwFUAXSv2NtXmov+Ik
rZHN/BZA+ldw9pP3sb+M3vKaz2QYQBYEZ9q/cbC/jcMMZ9W0GUCpevgKC+Oj
v1szGVHwIBtAeTsab3yZcr+nQ1kcaoYcQE40FdaOuJY/S39tqufTHUDlVlwB
WUqhP7xFdFZ6PR9APxCXQCfcnz/Cm6diiEcgQMlao1gVPpM/5eSuCgPtIEDt
tqo2zVduP29zr0GIoCFAI+bv35Ldg7+lFxpaD0giQM39jyUHQ5C/QQF+AaH9
IkDMmbpBuN2Ovxy7exniryNAODLaqbcvgr+iiuMSJVYkQNeqIcDgl1e/j59E
m3IKJUAgaQcmDmB1PyjKDwXCsiVAUxR8EeYFgT8AxXTfwFcmQDINhwkvoYA/
PgXTSMoKJ0BSLM5yT5F1Pyhbm5PVsSdAuRdGTLqRWj949lxt62YoQPB9oV5T
6ly/dKeIKAMQKUBl+pVtEDhsv68oTlTKtSlAur3sLqqcbL9R7wwPnGkqQAql
Otux5mG/n8s1q28RK0BSFczNS2g7v1PtV9ZNxytA/oM8+CLSVD9H3xNy23ks
QMXZUklEs2E/5uY572ogLUCf25Pb9d1hP+szWfsE1S1AgVHHDDkQWT+cluLo
oH0uQGHCVBqpT0U/jMkFR+wiL0C1FNuyaWcgv+JBIjRC1i9AZpszdewmRL/y
Z1QBzT4wQMaQK1YU/kW/plEUMH6ZMEDnffl4ck45v3ojIReH8jBABJ8vREtG
Cz8kAOPukEUxQBfiSaZw0js/gX8hDqCfMUBlh5+4tI1FP7QJFR6w8zFA7hbT
PPc3Rj+aNoV1xU4yQHOAETrXU0E/n0tChTKoMkAFdJo31OIzP3prtIWg+zJA
6ByIE5YLHT8ILqPNE1YzQBey+5B8sey+bPtGBoiqM0COwnJNcPcAvzIUUPr/
/zNAUdu5peQJ+z4ur1Q+
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$4262#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{{}, {}}, {{}, {}}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 20.}, {-0.0711799457680769, 
                    0.07491389487970083}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       InterpolatingFunction[{{0., 20.}}, {
        5, 7, 1, {647}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
         False}, CompressedData["
1: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
Xf0mNsq6m69IDbDx32+hIf4DyIMGNA==
        "], {Developer`PackedArrayForm, CompressedData["
1:eJwl1W1EKIAVANDWWpIkSZKkJUmSJEmSJEnyJEmSJEmSliRJkiRPkiRJkiRP
kiRJkiRJkiRJkiRJkiRJnmSn7XLc//fz3w3/qWj7R0BAwO/AgP/FTwoimBBC
CSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOfAgopopgSSinjF+VU
UEkV1dRQSx31NNBIE8200Eob7XTQSRfd9NBLH/0MMMjQT00YZoRRxhhngkmm
mGaGWeaYZ4E/LLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLFNTfc
csc9DzzyxDMvvPLGOx988pcvvgkwCIEEEUwIoYQRTgSRRBFNDLHEEU8CiSSR
TAqppJFOBplkkU0OueSRTwGFFFFMCaWU8YtyKqikimpqqKWOehpopIlmWmjl
Z8jb6aCTLrrpoZc++hlgkCF+M8wIo4wxzgSTTDHNDLPMMc8Cf1hkiWVWWGWN
dTbYZIttdthlj30OOOSIY0445YxzLrjkimtuuOWOex545IlnXnjljXc++OQv
X3zzs/yBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8B
hRRRTAmllPGLciqopIpqaqiljnoaaKSJZlpopY12Ouiki2566KWPfgYYZCjw
/zdxmBFGGWOcCSaZYpoZZpljngX+sMgSy6ywyhrrbLDJFtvssMse+xxwyBHH
nHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyV+++Cbgn/pPEMGEEEoY4UQQ
SRTRxBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQSBHFlFBKGb8op4JKqqim
hlrqqKeBRppopoVW2ming0666KaHXvroZ4BBhvjNMCOMMsY4E0wyxTQzzDLH
PAv8YZEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCR
J5554ZU33vngk7988c3P4w8kiGBCCCWMcCKIJIpoYogljngSSCSJZFJIJY10
Msgki2xyyCWPfAoopIhiSiiljF+UU0ElVVRTQy111NNAI00000IrbbTTQSdd
dNNDL330M8AgQ/xmmBFGGWOcCSaZYpoZZpljngX+sMgSy6ywyhrrbLDJFtvs
sMse+xxwyBHHnHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyV+++CbgX/pP
EMGEEEoY4fwXz9ZFLQ==
         "], CompressedData["
1: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
GPKZZE/s97Zya2w0F/wPiVt6eA==
         "]}, {Automatic}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"\[Gamma]1", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      InterpretationBox[
       RowBox[{
        TagBox["InterpolatingFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{3.389830508474576*^-7, -9.49401652032943*^-8}, {
                    0.1310916955904689, 0.06606435375441634}}], 
                    
                    LineBox[{{1.5923372299992236`, 0.06606435375441634}, {
                    1.6840796572033543`, -0.0028326691381963063`}, {
                    1.7986875355149041`, -0.07623310219459271}}], 
                    
                    LineBox[{{3.3779861943624914`, -0.07623310219459271}, {
                    3.3927496486227655`, -0.07003578556797198}, {
                    3.7218413073515575`, 0.050172229768105224`}, {
                    3.799080711208248, 0.06606435375441634}}], 
                    
                    LineBox[{{4.7883741014284125`, 0.06606435375441634}, {
                    5.075162855614166, 0.011066235757860721`}, {
                    5.422731971016678, -0.04758139142660564}, {
                    5.728641088548072, -0.07623310219459271}}], 
                    LineBox[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAABYpRjO2UGEALZMw4A4Szv43DDGfV
tBlAjTK+eYhvrb9bMxlR8CAbQNuFKDTySZe/p0NZHGqGHEBmpe7hAFR/P0t/
barn0x1AqR82RWJPmD+8RXRWej0fQLYHoTEi3pk/wpunYohHIECCYg0l2+aO
P+XkrgoD7SBApP3j1sUDMT9vc69BiKAhQE4OqSG8hI2/pRcaWg9IIkD535bb
+e6Wv0EBfgGh/SJAHbKlwLbXl78cu3sZ4q8jQKtyx+tuUZK/oorjEiVWJEA4
/mcDhgmFv4+fRJtyCiVANXnuxb/EZb8oyg8FwrIlQMAtiydawFo/AMV038BX
JkASiGEqWolkPz4F00jKCidA4oR2snkcOj8oW5uT1bEnQEWYcmHtsmi/ePZc
betmKECDFhVfA9h6v3SniCgDEClALRn+rFqEgb+vKE5UyrUpQB47SBOeMoK/
Ue8MD5xpKkAjAxOSWYx/v5/LNatvEStANVHQlqjgd79T7VfWTccrQA0UH0HK
Xm+/R98Tctt5LECY2BmyOtFkv+bmOe9qIC1AP/PnbznCYb/rM1n7BNUtQHXO
SYQrwmS/nJbi6KB9LkDd6XJ/07pqv4zJBUfsIi9AA0pkJ8JOcL/iQSI0QtYv
QAWrm5VuR3K/8mdUAc0+MEDBSt2i3Hpyv6ZRFDB+mTBAtxlDzHMecb96IyEX
h/IwQCBVLT770G2/JADj7pBFMUD5a5rjhqZpv4F/IQ6gnzFArK1bHf9aZr+0
CRUesPMxQFpBBoBP7mS/mjaFdcVOMkAHiABFwv1kv59LQoUyqDJAz1JaxQT2
Zb96a7SFoPsyQFVsAyzX7Ga/CC6jzRNWM0DgT/ZFoWdnv2z7RgaIqjNAzsFi
32USZ78yFFD6//8zQDwkYkV3DGa/Y1ExjQ==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$4316#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{{}, {}}, {{}, {}}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 20.}, {-0.07623310219459271, 
                    0.06606435375441634}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{3.389830508474576*^-7, -9.49401652032943*^-8}, {
                    0.1310916955904689, 0.06606435375441634}}], 
                    
                    LineBox[{{1.5923372299992236`, 0.06606435375441634}, {
                    1.6840796572033543`, -0.0028326691381963063`}, {
                    1.7986875355149041`, -0.07623310219459271}}], 
                    
                    LineBox[{{3.3779861943624914`, -0.07623310219459271}, {
                    3.3927496486227655`, -0.07003578556797198}, {
                    3.7218413073515575`, 0.050172229768105224`}, {
                    3.799080711208248, 0.06606435375441634}}], 
                    
                    LineBox[{{4.7883741014284125`, 0.06606435375441634}, {
                    5.075162855614166, 0.011066235757860721`}, {
                    5.422731971016678, -0.04758139142660564}, {
                    5.728641088548072, -0.07623310219459271}}], 
                    LineBox[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAABYpRjO2UGEALZMw4A4Szv43DDGfV
tBlAjTK+eYhvrb9bMxlR8CAbQNuFKDTySZe/p0NZHGqGHEBmpe7hAFR/P0t/
barn0x1AqR82RWJPmD+8RXRWej0fQLYHoTEi3pk/wpunYohHIECCYg0l2+aO
P+XkrgoD7SBApP3j1sUDMT9vc69BiKAhQE4OqSG8hI2/pRcaWg9IIkD535bb
+e6Wv0EBfgGh/SJAHbKlwLbXl78cu3sZ4q8jQKtyx+tuUZK/oorjEiVWJEA4
/mcDhgmFv4+fRJtyCiVANXnuxb/EZb8oyg8FwrIlQMAtiydawFo/AMV038BX
JkASiGEqWolkPz4F00jKCidA4oR2snkcOj8oW5uT1bEnQEWYcmHtsmi/ePZc
betmKECDFhVfA9h6v3SniCgDEClALRn+rFqEgb+vKE5UyrUpQB47SBOeMoK/
Ue8MD5xpKkAjAxOSWYx/v5/LNatvEStANVHQlqjgd79T7VfWTccrQA0UH0HK
Xm+/R98Tctt5LECY2BmyOtFkv+bmOe9qIC1AP/PnbznCYb/rM1n7BNUtQHXO
SYQrwmS/nJbi6KB9LkDd6XJ/07pqv4zJBUfsIi9AA0pkJ8JOcL/iQSI0QtYv
QAWrm5VuR3K/8mdUAc0+MEDBSt2i3Hpyv6ZRFDB+mTBAtxlDzHMecb96IyEX
h/IwQCBVLT770G2/JADj7pBFMUD5a5rjhqZpv4F/IQ6gnzFArK1bHf9aZr+0
CRUesPMxQFpBBoBP7mS/mjaFdcVOMkAHiABFwv1kv59LQoUyqDJAz1JaxQT2
Zb96a7SFoPsyQFVsAyzX7Ga/CC6jzRNWM0DgT/ZFoWdnv2z7RgaIqjNAzsFi
32USZ78yFFD6//8zQDwkYkV3DGa/Y1ExjQ==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$4316#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{{}, {}}, {{}, {}}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 20.}, {-0.07623310219459271, 
                    0.06606435375441634}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       InterpolatingFunction[{{0., 20.}}, {
        5, 7, 1, {647}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
         False}, CompressedData["
1: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
Xf0mNsq6m69IDbDx32+hIf4DyIMGNA==
        "], {Developer`PackedArrayForm, CompressedData["
1:eJwl1W1EKIAVANDWWpIkSZKkJUmSJEmSJEnyJEmSJEmSliRJkiRPkiRJkiRP
kiRJkiRJkiRJkiRJkiRJnmSn7XLc//fz3w3/qWj7R0BAwO/AgP/FTwoimBBC
CSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOfAgopopgSSinjF+VU
UEkV1dRQSx31NNBIE8200Eob7XTQSRfd9NBLH/0MMMjQT00YZoRRxhhngkmm
mGaGWeaYZ4E/LLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLFNTfc
csc9DzzyxDMvvPLGOx988pcvvgkwCIEEEUwIoYQRTgSRRBFNDLHEEU8CiSSR
TAqppJFOBplkkU0OueSRTwGFFFFMCaWU8YtyKqikimpqqKWOehpopIlmWmjl
Z8jb6aCTLrrpoZc++hlgkCF+M8wIo4wxzgSTTDHNDLPMMc8Cf1hkiWVWWGWN
dTbYZIttdthlj30OOOSIY0445YxzLrjkimtuuOWOex545IlnXnjljXc++OQv
X3zzs/yBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8B
hRRRTAmllPGLciqopIpqaqiljnoaaKSJZlpopY12Ouiki2566KWPfgYYZCjw
/zdxmBFGGWOcCSaZYpoZZpljngX+sMgSy6ywyhrrbLDJFtvssMse+xxwyBHH
nHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyV+++Cbgn/pPEMGEEEoY4UQQ
SRTRxBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQSBHFlFBKGb8op4JKqqim
hlrqqKeBRppopoVW2ming0666KaHXvroZ4BBhvjNMCOMMsY4E0wyxTQzzDLH
PAv8YZEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCR
J5554ZU33vngk7988c3P4w8kiGBCCCWMcCKIJIpoYogljngSSCSJZFJIJY10
Msgki2xyyCWPfAoopIhiSiiljF+UU0ElVVRTQy111NNAI00000IrbbTTQSdd
dNNDL330M8AgQ/xmmBFGGWOcCSaZYpoZZpljngX+sMgSy6ywyhrrbLDJFtvs
sMse+xxwyBHHnHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyV+++CbgX/pP
EMGEEEoY4fwXz9ZFLQ==
         "], CompressedData["
1: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
xOH/APPUw28=
         "]}, {Automatic}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7621013722845216`*^9, {3.7621014120932865`*^9, 3.7621014342351685`*^9}, 
   3.762101674410105*^9, 3.762101844164603*^9, 3.7621019301380363`*^9, 
   3.7621021443074994`*^9, 3.7621022751606817`*^9, 3.7622484387432694`*^9, 
   3.7622484829192843`*^9, 3.7622485628680534`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"74abd830-92c4-4f02-8764-81410fda0477"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
5Jl+P6l1mgNPbKoVwiak0Pm281L7YA4kidfX/5qWwg0++idOnuPAhRi25Vt+
abQ39H2aHcIB28QpHWdJabzu9t1FMZIDvMcr5iK1pbFeZx7T6zYHFny4k/J3
vzQWmR5wX1DAgXkRD3a6HpBGzqezN7lvOTBmky7z/pA0+lqW8L0q4kBrXW5Y
rK80XovnBdmUcSCtqd53+VlpbNIuztv5kQNrekTQPVEav5rWpQ5+48BBQX9O
XZ00Mm0vJQ785oCS6qfm6a/SaP73dpDNEAfqVi/6rPVNGg/mKZY8HObAqiPv
i0JY0vg058pJxzEOCDXI3l7VJ43C2vMPxU5y4GHqG6fkeTK43uJLTrQAF3YU
UOyq58ugQ/aXE+XzuSDe6Go+ISyDaXAxbEyQC37CwgZbF8hgMKswZ7MIF8yP
bpcUosng6Okc2S5xLnSvnajyMZTBV23qvpGyXEh0sn2XZCSDkZ/me8fJccHW
NzX/wxoZ/HWzLydJngvZ962eMExlcF/fb0hR5EKo6K1L3+xk8NFuF/nwRVxQ
bzbGdZ4yOOj692WLOhdahqKMvL1l0Lrz57M3i7lwlcLTSfCRQc0nC/5c1+DC
2Lori4ZPyiB7/ukzqMWFirS2qbQLMuhqrm5/VpsL7ifO5IgnyWBM7D2bAD0u
rNLvzFlyVwZ9nKBrsT4XKCP4xjJVBhO36/ysJ846LpR74ZEMDu+qtllsyIWZ
Y9fzxl7J4P59nc7PVnHh84qxPKk3MvjnZfopSyMu3B9yztfJl8GI//rF2MTW
x5QLDpXIoKi31nURYy7E+z5+214tg+Fiv+nr1nLBS5dSOFkng75+NoPlxCaD
Rwrl6mXQjc9vlZUJF7qO6hc5tJB4py/Vt17HhRVHi4orumUwOy1lfBlwQUCH
XsLtlcHtAsdTU4ibfoWU/PtBrtdIrFqIXAj2sSpdPSyDn/zDU/uIPx1pKHs+
K4PzF7UcCTbjwp1lq9594qPif9/3L2MRHxtIfNcjQMVe+74TRhu4IHfEtZxO
oaLN3Xm3+oj7tcvK10lQ8blM0el15lwo/Mms2CVJxU1/c3ujid0O91fEyVFx
I6vGczn5PbRS2/b9S0UqutxTPRtILPIz832dMhUdBPXUyohfePtVijCpKNFo
R99kSeLrNfchWJeKqizzBWYbSXyXuH28pU/FOw6Hy4OI7/dXfHyzkoqP2xjS
L4itva58GlpLxbphs/+krbigvOTXJwmgYm3qsTQkHuqzr1pqRkVH9+sHjxDH
H5Kt9rCi4u0evtpCYi+twOr/NlFRR3TqJJfYpK+tOnkzFX/xry0RsObCwifr
at5uoaJ/mWkWk5jnmVrT4khFjXmPrEyJczQFase3U3G0vCnChTi890Ct9G4q
dv808/cndnn8sVbXlYpzu3aKXyXW9dSus91Pxc2j4Q6pxJ1eqr4ZHiRes70Z
r4mvHpGRXHCIioZaYtsqiNf4Cr88epiK4ZLDpvXE/cent3w+Sp63Piq4gzjR
b3BE9wQVJSO+ze8htjzVdSPGn4oKWwrbfxKPBTUbDgdSUSjUWGiQ+EFw9bct
wVS8JHHo4v+99XxJwKvzVJxa4+/8i5gv5LW8zEUqrqBd+6+PODP0cd7Jy1Qc
KmQLcYn3hN3e2RhBRRHdhL4mYvEr0VOGUVTEC1ytKuKCqxdv34yh4sGSn58K
iA9FnzL5c4OKG6Z5tU+I5WMPdzgnUPE3Z3RVHHFl3N5zuUlUTJEB4bPEfgnb
VBWSqXj2gISpO7Fa0sbSwHtUHEss6LEk/npn7f7WNCqePHZ/SpP4Qoou/5on
5H6Z9PNCxDr3mQ+SnlFxjez1AB45z8jHYt93v6LiWs/cD7HEa9LnLhXmUNGs
WV3Dk7jv+ajGonwqypr85jMmtnjFOtRZQsWeUqOV30h+jWV/FoVyEg9q3o2U
/+dfbnl6SiUV420CAj2J5wqfDeyrpaJ5X2bnIMnfzJKUqLIvVHS6sfRAFrHL
uxs6ao3kfJ72nDlKnP/hzLGuNiqWXNT26CL5f7J+09iBPpKf1xheWaR+1L7B
zcqfVDzyRr5gD/GXZoNVmoNU1HKCLBHi5R20wL5xKlIni+O3k3rs7f057S0g
i/N8hhJaTUl+/2DfqRaSReuI4T1+xOa/GtYto8iizmN+tjjxvZG3539JymLq
wNlFRqQf7J6NFDimIosTjcdbj60n9Sa9TMzfWBZLRL42nFnDhfU+Pv23TWTR
Sm5x9QzpX5kfMj+8A1lkfP06dIb4WrBeqKSlLNqrsL/4rSb9vWfV7LOtsuhe
7qO5hfTHqnzTQd5hWRxddHD7G9Jv11Av1or6ymLeKc/dNOL0oxXPVpyQRQV2
ac65FVyIYG48dC6Q3D/v3SnU5YJVlC1X8ZIs7q8cCcxaxoX3+7Y3OCTLYsrV
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
K82T
       "]]},
     Annotation[#, "Charting`Private`Tag$4370#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{431.11111111111126`, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7621013722845216`*^9, {3.7621014120932865`*^9, 3.7621014342351685`*^9}, 
   3.762101674410105*^9, 3.762101844164603*^9, 3.7621019301380363`*^9, 
   3.7621021443074994`*^9, 3.7621022751606817`*^9, 3.7622484387432694`*^9, 
   3.7622484829192843`*^9, 3.7622485629400682`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"ff7dcc6c-6856-4142-ad1e-892602812908"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13c81P8fAHAje3MyzrhzVhQlafd6JURWCamkEpkhlRSppFA0pEhFpKik
kmSfedydlZ2s0OBLmdn8Pr+/PJ6PO5/P+/1a7/dRnX1tXLk4ODj8uTk4/v/3
aYgz7zqXWzs4MOqKV7dhUUUTxeIAxQPUjp9OiXHtLl5mFF+jUC7AnoUwieiB
hWLRmJz3gu2hoFdluh36ROlPS6KVeSiRkBU7m/lbQp6++q/L7WW3O6DftMXs
ti2N3iWauLTQFgNGfh0bG05q0b23nzs1rfwIcu1vdPaIb6B/bO5Nndz1BNp3
L2+7tWUzfc7LonPMLQmOQX5Wz+ntdKPae2r/2lIgKKgvqbPPkP47fnfppEcq
/OGwP/XtuxE9ymXRcWL+BeTnblfkZprQ1679ODMWnQZ/VCZ9N8eY0pvm3WNH
lV8Bj4O7TMbGPfSAKqW1fz+8hhtKpwu2ZpvT5e83s0d2ZUDy9GIbD7clvdjp
pttwy1uIWnI9+kLZiu6shdz/ub2DiZT1Rss81nSu+Yv1k8HvwWGSQnbKsqY3
99opThp/gI7deZRU8b30l4y1XhOiWfDYcWqxVmMvPTBDKG+8LQv8VINpGxT3
0vfE/OQdf/YR/kSYeYj0WNMVAkttxzyyYetKjSaRrdb0P0eepIzqfQJ1W7MU
HQsresmu86N/5z9BvlN/vJO4JT1mlc2OvxU5ENRCj8u7bk53EVsT9Sf6M/QX
K4Zff21GN5ji6xixz4VFXX0dzUu76Xzf+jRGlPPA4nHS0fULRvT2kqJzw7/z
IHMoefqguiH99cv48v8+5MNQyFvHD5Pb6cFRZyT+u1gAaYdYP+GPAd3K3+ro
0K5CULD/q13to0OnOKx6OyhcBHX/Mux6NpHp49tXzP9uKYLcWZGbWQFc8FAg
/+EvNzo00kKNzrw2gOzze/zPyJbAliO/PSumEJ4MbZSbCC6BOM6s7zXjJuDT
IOk2blwKmw9K2ZG5bODALg5R/9elkGnsMpYZZQeYM5I9JloG+5alP1uaHATJ
J9VcY21loNKQ3P3w+TGYF8155betHJIioXZ/lTMMXH2+d/RZOSR7vP7B5nKF
HLeQxL8eFXCmtkdbpNQDkjq8jH3rKqBTW0+sZ5c3RFgeHP6jVwlVlIztV7p9
4NB6/S1/5iuh0cxvXdwaf9j1kvr91DEGtEcavHqceAZWy4lFjFQwQC5GZd81
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
vzvYiVYkXCWdfCaIsFj69pqCfSQcXaMQnEm4z+1ZTbstCUsVKoI7CH/S4K6d
OkBC7tSgC8uEI3651koeJuGsslqAolYDOKZV1+o6kfDHcEqAPmFdN+06i+Mk
FHZrCzEi3O2h7PvWhYQZltq8VoSjvKXERd1JuObwQRdrwlt8+T74eJGQx7g7
0ZTw4On5ffU+JNykIF2wmXD82b/juv4kZI45FKsQNjnff//uORIWtK7I5CY8
eaFNfyyQhNYWIXc6ifU9D2a37AsmYZ3EU/e3hG0u0wOyLpNw5vUZCCDMEfpR
RuoaCYPZUvIbCWeGpeWeuUFCIY07S3+J+B0Jf3ywOZKE+09Pjz8jLHzzzpx+
NLF/J6dFM8L5UdceP7hLQvazFtp/RH5kYry67ONI6F6ypUuaMCP2aMjnBBL+
eUILTiLyezZuv7JsIgnXj8daUwl/ebL1+NdUEl5IeZ8pQtTHlSRdri3pJNzO
fr07kKgfnRTa84Q3JDTir9X9RtTbrTShH4ezSPj00Cr+m0Q9bnm9fL3wEwmz
tn/kaSXq9XfGhLpiHglztSa95QkbZ31z76YT7w/vvx9F1Pty4ZvhY7VEP/jm
CsoQ/ZJJT4oubSDh2ech8hpEPzmW3ddRaSbhe+7IGl2i3/Kqgvz6O0i4tohL
X1u2Ac40mk+6/ibiK0ftYxH9q9ICDxj/kTBzQrPpmWQDNLStN9D4S9TnoZMp
vkS/r+kiB/6eItb7bnh2WrQBfv36b96TWxpvWw67ZhPz4+FQzxM2rzSKyN6j
2vA3gNFI0/bVgtK4etRp7jdvAySPF1weEZdGe9fXNK4VDXB48Ra3n5I0skhX
PRjzxDyTXC10brM0CguVGtf31sOOU6cGH2+TRrvm1WJnu+ohsyqzqgyk8eiz
inIRYn7eDl4XJm4ijaOH36tTmoj5/tNg8Y2NNH5Q5jxSVlEPrLydf/u8pDH6
Rp+awMt62EK6VivgK419WTKHuVPq4bVPxZu1/tLop7rZdeJpPUTSdruHBEqj
f26E/idi3ptGW3yXuy6N1TX7XEvD6qHy2IGmvYnSGJb10kzgeD3oF8R/OJ8s
jSf3pP5yc6yHVOmOO4mp0lixoLO36ABxnrAcLYZfS+P414QSC6t6MNR3rgz/
LI0SDx52Lm+phxK+U5+LG6SRweP7t0KyHgoyQx+v5l6JI1abU7YWEuelhZ18
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
n11eJuLbYSOxg/D/AE/10dM=
       "]]},
     Annotation[#, "Charting`Private`Tag$4417#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{431.11111111111126`, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7621013722845216`*^9, {3.7621014120932865`*^9, 3.7621014342351685`*^9}, 
   3.762101674410105*^9, 3.762101844164603*^9, 3.7621019301380363`*^9, 
   3.7621021443074994`*^9, 3.7621022751606817`*^9, 3.7622484387432694`*^9, 
   3.7622484829192843`*^9, 3.762248562971084*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"0e642931-19f7-4d7a-b398-4b174fb8ba0a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
hv8BBa8N2Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$4464#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{431.11111111111126`, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7621013722845216`*^9, {3.7621014120932865`*^9, 3.7621014342351685`*^9}, 
   3.762101674410105*^9, 3.762101844164603*^9, 3.7621019301380363`*^9, 
   3.7621021443074994`*^9, 3.7621022751606817`*^9, 3.7622484387432694`*^9, 
   3.7622484829192843`*^9, 3.7622485630040827`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"2ac008df-465c-4f94-a454-8952df98c0b9"]
}, Open  ]]
},
WindowSize->{1280, 941},
WindowMargins->{{-1288, Automatic}, {Automatic, -8}},
Magnification:>0.9 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 116608, 2590, 3173, "Input",ExpressionUUID->"9a60bc33-53d8-4ebc-9dd0-cdb435ff7fcb"],
Cell[117191, 2614, 213630, 3779, 183, "Output",ExpressionUUID->"74abd830-92c4-4f02-8764-81410fda0477"],
Cell[330824, 6395, 18628, 324, 254, "Output",ExpressionUUID->"ff7dcc6c-6856-4142-ad1e-892602812908"],
Cell[349455, 6721, 19927, 345, 254, "Output",ExpressionUUID->"0e642931-19f7-4d7a-b398-4b174fb8ba0a"],
Cell[369385, 7068, 20100, 348, 286, "Output",ExpressionUUID->"2ac008df-465c-4f94-a454-8952df98c0b9"]
}, Open  ]]
}
]
*)

